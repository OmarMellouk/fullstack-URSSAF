{"ast":null,"code":"import { Injectable, Inject } from '@angular/core';\nimport { JwtHelperService } from './jwthelper.service';\nimport { JWT_OPTIONS } from './jwtoptions.token';\nimport { from } from \"rxjs\";\nimport { mergeMap } from 'rxjs/operators';\nimport { parse } from 'url';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './jwthelper.service';\n\nvar JwtInterceptor =\n/** @class */\nfunction () {\n  function JwtInterceptor(config, jwtHelper) {\n    this.jwtHelper = jwtHelper;\n    this.tokenGetter = config.tokenGetter;\n    this.headerName = config.headerName || 'Authorization';\n    this.authScheme = config.authScheme || config.authScheme === '' ? config.authScheme : 'Bearer ';\n    this.whitelistedDomains = config.whitelistedDomains || [];\n    this.blacklistedRoutes = config.blacklistedRoutes || [];\n    this.throwNoTokenError = config.throwNoTokenError || false;\n    this.skipWhenExpired = config.skipWhenExpired;\n  }\n\n  JwtInterceptor.prototype.isWhitelistedDomain = function (request) {\n    var requestUrl = parse(request.url, false, true);\n    return requestUrl.host === null || this.whitelistedDomains.findIndex(function (domain) {\n      return typeof domain === 'string' ? domain === requestUrl.host : domain instanceof RegExp ? domain.test(requestUrl.host) : false;\n    }) > -1;\n  };\n\n  JwtInterceptor.prototype.isBlacklistedRoute = function (request) {\n    var url = request.url;\n    return this.blacklistedRoutes.findIndex(function (route) {\n      return typeof route === 'string' ? route === url : route instanceof RegExp ? route.test(url) : false;\n    }) > -1;\n  };\n\n  JwtInterceptor.prototype.handleInterception = function (token, request, next) {\n    var tokenIsExpired = false;\n\n    if (!token && this.throwNoTokenError) {\n      throw new Error('Could not get token from tokenGetter function.');\n    }\n\n    if (this.skipWhenExpired) {\n      tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n    }\n\n    if (token && tokenIsExpired && this.skipWhenExpired) {\n      request = request.clone();\n    } else if (token) {\n      request = request.clone({\n        setHeaders: (_a = {}, _a[this.headerName] = \"\" + this.authScheme + token, _a)\n      });\n    }\n\n    return next.handle(request);\n\n    var _a;\n  };\n\n  JwtInterceptor.prototype.intercept = function (request, next) {\n    var _this = this;\n\n    if (!this.isWhitelistedDomain(request) || this.isBlacklistedRoute(request)) {\n      return next.handle(request);\n    }\n\n    var token = this.tokenGetter();\n\n    if (token instanceof Promise) {\n      return from(token).pipe(mergeMap(function (asyncToken) {\n        return _this.handleInterception(asyncToken, request, next);\n      }));\n    } else {\n      return this.handleInterception(token, request, next);\n    }\n  };\n  /** @nocollapse */\n\n\n  JwtInterceptor.ctorParameters = function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [JWT_OPTIONS]\n      }]\n    }, {\n      type: JwtHelperService\n    }];\n  };\n\n  JwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) {\n    return new (t || JwtInterceptor)(ɵngcc0.ɵɵinject(JWT_OPTIONS), ɵngcc0.ɵɵinject(ɵngcc1.JwtHelperService));\n  };\n\n  JwtInterceptor.ɵprov = /*@__PURE__*/ɵngcc0.ɵɵdefineInjectable({\n    token: JwtInterceptor,\n    factory: function (t) {\n      return JwtInterceptor.ɵfac(t);\n    }\n  });\n\n  (function () {\n    (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtInterceptor, [{\n      type: Injectable\n    }], function () {\n      return [{\n        type: undefined,\n        decorators: [{\n          type: Inject,\n          args: [JWT_OPTIONS]\n        }]\n      }, {\n        type: ɵngcc1.JwtHelperService\n      }];\n    }, null);\n  })();\n\n  return JwtInterceptor;\n}();\n\nexport { JwtInterceptor };","map":{"version":3,"sources":["C:/Users/AC75098185/dev/fullstack-spa-intranet/node_modules/@auth0/angular-jwt/__ivy_ngcc__/src/jwt.interceptor.js"],"names":["Injectable","Inject","JwtHelperService","JWT_OPTIONS","from","mergeMap","parse","ɵngcc0","ɵngcc1","JwtInterceptor","config","jwtHelper","tokenGetter","headerName","authScheme","whitelistedDomains","blacklistedRoutes","throwNoTokenError","skipWhenExpired","prototype","isWhitelistedDomain","request","requestUrl","url","host","findIndex","domain","RegExp","test","isBlacklistedRoute","route","handleInterception","token","next","tokenIsExpired","Error","isTokenExpired","clone","setHeaders","_a","handle","intercept","_this","Promise","pipe","asyncToken","ctorParameters","type","undefined","decorators","args","ɵfac","JwtInterceptor_Factory","t","ɵɵinject","ɵprov","ɵɵdefineInjectable","factory","ngDevMode","ɵsetClassMetadata"],"mappings":"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","sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport { JwtHelperService } from './jwthelper.service';\nimport { JWT_OPTIONS } from './jwtoptions.token';\nimport { from } from \"rxjs\";\nimport { mergeMap } from 'rxjs/operators';\nimport { parse } from 'url';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from './jwthelper.service';\nvar JwtInterceptor = /** @class */ (function () {\n    function JwtInterceptor(config, jwtHelper) {\n        this.jwtHelper = jwtHelper;\n        this.tokenGetter = config.tokenGetter;\n        this.headerName = config.headerName || 'Authorization';\n        this.authScheme =\n            config.authScheme || config.authScheme === ''\n                ? config.authScheme\n                : 'Bearer ';\n        this.whitelistedDomains = config.whitelistedDomains || [];\n        this.blacklistedRoutes = config.blacklistedRoutes || [];\n        this.throwNoTokenError = config.throwNoTokenError || false;\n        this.skipWhenExpired = config.skipWhenExpired;\n    }\n    JwtInterceptor.prototype.isWhitelistedDomain = function (request) {\n        var requestUrl = parse(request.url, false, true);\n        return (requestUrl.host === null ||\n            this.whitelistedDomains.findIndex(function (domain) {\n                return typeof domain === 'string'\n                    ? domain === requestUrl.host\n                    : domain instanceof RegExp\n                        ? domain.test(requestUrl.host)\n                        : false;\n            }) > -1);\n    };\n    JwtInterceptor.prototype.isBlacklistedRoute = function (request) {\n        var url = request.url;\n        return (this.blacklistedRoutes.findIndex(function (route) {\n            return typeof route === 'string'\n                ? route === url\n                : route instanceof RegExp\n                    ? route.test(url)\n                    : false;\n        }) > -1);\n    };\n    JwtInterceptor.prototype.handleInterception = function (token, request, next) {\n        var tokenIsExpired = false;\n        if (!token && this.throwNoTokenError) {\n            throw new Error('Could not get token from tokenGetter function.');\n        }\n        if (this.skipWhenExpired) {\n            tokenIsExpired = token ? this.jwtHelper.isTokenExpired(token) : true;\n        }\n        if (token && tokenIsExpired && this.skipWhenExpired) {\n            request = request.clone();\n        }\n        else if (token) {\n            request = request.clone({\n                setHeaders: (_a = {},\n                    _a[this.headerName] = \"\" + this.authScheme + token,\n                    _a)\n            });\n        }\n        return next.handle(request);\n        var _a;\n    };\n    JwtInterceptor.prototype.intercept = function (request, next) {\n        var _this = this;\n        if (!this.isWhitelistedDomain(request) ||\n            this.isBlacklistedRoute(request)) {\n            return next.handle(request);\n        }\n        var token = this.tokenGetter();\n        if (token instanceof Promise) {\n            return from(token).pipe(mergeMap(function (asyncToken) {\n                return _this.handleInterception(asyncToken, request, next);\n            }));\n        }\n        else {\n            return this.handleInterception(token, request, next);\n        }\n    };\n    /** @nocollapse */\n    JwtInterceptor.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [JWT_OPTIONS,] },] },\n        { type: JwtHelperService, },\n    ]; };\nJwtInterceptor.ɵfac = function JwtInterceptor_Factory(t) { return new (t || JwtInterceptor)(ɵngcc0.ɵɵinject(JWT_OPTIONS), ɵngcc0.ɵɵinject(ɵngcc1.JwtHelperService)); };\nJwtInterceptor.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: JwtInterceptor, factory: function (t) { return JwtInterceptor.ɵfac(t); } });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(JwtInterceptor, [{\n        type: Injectable\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [JWT_OPTIONS]\n            }] }, { type: ɵngcc1.JwtHelperService }]; }, null); })();\n    return JwtInterceptor;\n}());\nexport { JwtInterceptor };\n\n"]},"metadata":{},"sourceType":"module"}