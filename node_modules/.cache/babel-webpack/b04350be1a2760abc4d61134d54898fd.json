{"ast":null,"code":"import { EntrepriseTableActionRendrerComponent } from '../entreprise-table-action-rendrer/entreprise-table-action-rendrer.component';\nimport { DateRendererComponent } from '@app/fullstack-components/tableau/ag-grid-components/date-renderer/date-renderer.component';\nimport { ColumnHeaderComponent } from '@app/fullstack-components/tableau/ag-grid-components/column-header/column-header.component';\nimport { DateFilterComponent } from '@app/fullstack-components/tableau/ag-grid-components/date-filter/date-filter.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/apis/applirest/services\";\nimport * as i2 from \"@app/fullstack-components/tableau/services/tableau-configuration-builder.service\";\nimport * as i3 from \"@app/fullstack-components/tableau/services/tableau-formatters-comparators.service\";\nimport * as i4 from \"../../../../../fullstack-components/tableau/components/tableau/tableau.component\";\nimport * as i5 from \"@angular/common\";\nexport class EntreprisesTableComponent {\n  constructor(entrepriseService, tableauConfigurationBuilderService, tableauFormattersComparatorsService) {\n    this.entrepriseService = entrepriseService;\n    this.tableauConfigurationBuilderService = tableauConfigurationBuilderService;\n    this.tableauFormattersComparatorsService = tableauFormattersComparatorsService;\n    this.tableFrameworkComponents = {\n      dateRenderer: DateRendererComponent,\n      agColumnHeader: ColumnHeaderComponent,\n      agDateInput: DateFilterComponent,\n      actionRenderer: EntrepriseTableActionRendrerComponent\n    };\n    this.columnDefs = [{\n      width: 60,\n      cellRenderer: 'actionRenderer',\n      sortable: false,\n      filter: false\n    }, {\n      headerName: '#',\n      field: 'id',\n      sort: 'asc',\n      filter: 'agTextColumnFilter',\n      floatingFilter: true\n    }, {\n      headerName: 'Dénomination',\n      field: 'denomination',\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      filterParams: {\n        browserDatePicker: false,\n        valueFormatter: this.lowerCase\n      }\n    }, {\n      headerName: 'Activité principale',\n      field: 'activite',\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      filterParams: {\n        browserDatePicker: false,\n        valueFormatter: this.lowerCase\n      }\n    }, {\n      headerName: 'Code NAF',\n      field: 'naf',\n      filter: 'agTextColumnFilter',\n      floatingFilter: true,\n      filterParams: {\n        browserDatePicker: false,\n        valueFormatter: this.lowerCase\n      }\n    }, {\n      headerName: '\tDate de création',\n      field: 'dateCreation',\n      cellRenderer: 'dateRenderer',\n      filter: 'agDateColumnFilter',\n      floatingFilterComponent: 'agDateInput',\n      floatingFilter: true,\n      filterParams: {\n        comparator: this.tableauFormattersComparatorsService.compareDates,\n        browserDatePicker: false,\n        valueFormatter: this.lowerCase\n      }\n    }];\n    this.gridOptions = this.tableauConfigurationBuilderService.createGridConfiguration(this.tableFrameworkComponents);\n  }\n\n  lowerCase(params) {\n    return params.value.toLowerCase();\n  }\n\n  onGridReady() {\n    this.rowData = this.entrepriseService.RechercherEntreprises({\n      currentPage: 0,\n      size: 20\n    });\n  }\n\n}\n\nEntreprisesTableComponent.ɵfac = function EntreprisesTableComponent_Factory(t) {\n  return new (t || EntreprisesTableComponent)(i0.ɵɵdirectiveInject(i1.EntrepriseService), i0.ɵɵdirectiveInject(i2.TableauConfigurationBuilderService), i0.ɵɵdirectiveInject(i3.TableauFormattersComparatorsService));\n};\n\nEntreprisesTableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: EntreprisesTableComponent,\n  selectors: [[\"app-entreprises-table\"]],\n  decls: 3,\n  vars: 5,\n  consts: [[\"id\", \"myGrid\", 1, \"ag-theme-alpine\", 3, \"gridOptions\", \"rowData\", \"columnDefs\", \"gridReady\"], [\"agGrid\", \"\"]],\n  template: function EntreprisesTableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-tableau\", 0, 1);\n      i0.ɵɵlistener(\"gridReady\", function EntreprisesTableComponent_Template_app_tableau_gridReady_0_listener() {\n        return ctx.onGridReady();\n      });\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", i0.ɵɵpipeBind1(2, 3, ctx.rowData))(\"columnDefs\", ctx.columnDefs);\n    }\n  },\n  directives: [i4.TableauComponent],\n  pipes: [i5.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/AC75098185/dev/fullstack-spa-intranet/src/app/views/test-applirest/domain-components/entreprise/entreprises-table/entreprises-table.component.ts"],"names":["EntrepriseTableActionRendrerComponent","DateRendererComponent","ColumnHeaderComponent","DateFilterComponent","i0","i1","i2","i3","i4","i5","EntreprisesTableComponent","constructor","entrepriseService","tableauConfigurationBuilderService","tableauFormattersComparatorsService","tableFrameworkComponents","dateRenderer","agColumnHeader","agDateInput","actionRenderer","columnDefs","width","cellRenderer","sortable","filter","headerName","field","sort","floatingFilter","filterParams","browserDatePicker","valueFormatter","lowerCase","floatingFilterComponent","comparator","compareDates","gridOptions","createGridConfiguration","params","value","toLowerCase","onGridReady","rowData","RechercherEntreprises","currentPage","size","ɵfac","EntreprisesTableComponent_Factory","t","ɵɵdirectiveInject","EntrepriseService","TableauConfigurationBuilderService","TableauFormattersComparatorsService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","EntreprisesTableComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","EntreprisesTableComponent_Template_app_tableau_gridReady_0_listener","ɵɵpipe","ɵɵelementEnd","ɵɵproperty","ɵɵpipeBind1","directives","TableauComponent","pipes","AsyncPipe","encapsulation"],"mappings":"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","sourcesContent":["import { EntrepriseTableActionRendrerComponent } from '../entreprise-table-action-rendrer/entreprise-table-action-rendrer.component';\r\nimport { DateRendererComponent } from '@app/fullstack-components/tableau/ag-grid-components/date-renderer/date-renderer.component';\r\nimport { ColumnHeaderComponent } from '@app/fullstack-components/tableau/ag-grid-components/column-header/column-header.component';\r\nimport { DateFilterComponent } from '@app/fullstack-components/tableau/ag-grid-components/date-filter/date-filter.component';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@app/apis/applirest/services\";\r\nimport * as i2 from \"@app/fullstack-components/tableau/services/tableau-configuration-builder.service\";\r\nimport * as i3 from \"@app/fullstack-components/tableau/services/tableau-formatters-comparators.service\";\r\nimport * as i4 from \"../../../../../fullstack-components/tableau/components/tableau/tableau.component\";\r\nimport * as i5 from \"@angular/common\";\r\nexport class EntreprisesTableComponent {\r\n    constructor(entrepriseService, tableauConfigurationBuilderService, tableauFormattersComparatorsService) {\r\n        this.entrepriseService = entrepriseService;\r\n        this.tableauConfigurationBuilderService = tableauConfigurationBuilderService;\r\n        this.tableauFormattersComparatorsService = tableauFormattersComparatorsService;\r\n        this.tableFrameworkComponents = {\r\n            dateRenderer: DateRendererComponent,\r\n            agColumnHeader: ColumnHeaderComponent,\r\n            agDateInput: DateFilterComponent,\r\n            actionRenderer: EntrepriseTableActionRendrerComponent\r\n        };\r\n        this.columnDefs = [\r\n            {\r\n                width: 60,\r\n                cellRenderer: 'actionRenderer',\r\n                sortable: false,\r\n                filter: false\r\n            },\r\n            {\r\n                headerName: '#',\r\n                field: 'id',\r\n                sort: 'asc',\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true\r\n            },\r\n            {\r\n                headerName: 'Dénomination',\r\n                field: 'denomination',\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true,\r\n                filterParams: {\r\n                    browserDatePicker: false,\r\n                    valueFormatter: this.lowerCase\r\n                }\r\n            },\r\n            {\r\n                headerName: 'Activité principale',\r\n                field: 'activite',\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true,\r\n                filterParams: {\r\n                    browserDatePicker: false,\r\n                    valueFormatter: this.lowerCase\r\n                }\r\n            },\r\n            {\r\n                headerName: 'Code NAF',\r\n                field: 'naf',\r\n                filter: 'agTextColumnFilter',\r\n                floatingFilter: true,\r\n                filterParams: {\r\n                    browserDatePicker: false,\r\n                    valueFormatter: this.lowerCase\r\n                }\r\n            },\r\n            {\r\n                headerName: '\tDate de création',\r\n                field: 'dateCreation',\r\n                cellRenderer: 'dateRenderer',\r\n                filter: 'agDateColumnFilter',\r\n                floatingFilterComponent: 'agDateInput',\r\n                floatingFilter: true,\r\n                filterParams: {\r\n                    comparator: this.tableauFormattersComparatorsService.compareDates,\r\n                    browserDatePicker: false,\r\n                    valueFormatter: this.lowerCase\r\n                }\r\n            }\r\n        ];\r\n        this.gridOptions = this.tableauConfigurationBuilderService.createGridConfiguration(this.tableFrameworkComponents);\r\n    }\r\n    lowerCase(params) {\r\n        return params.value.toLowerCase();\r\n    }\r\n    onGridReady() {\r\n        this.rowData = this.entrepriseService.RechercherEntreprises({ currentPage: 0, size: 20 });\r\n    }\r\n}\r\nEntreprisesTableComponent.ɵfac = function EntreprisesTableComponent_Factory(t) { return new (t || EntreprisesTableComponent)(i0.ɵɵdirectiveInject(i1.EntrepriseService), i0.ɵɵdirectiveInject(i2.TableauConfigurationBuilderService), i0.ɵɵdirectiveInject(i3.TableauFormattersComparatorsService)); };\r\nEntreprisesTableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: EntreprisesTableComponent, selectors: [[\"app-entreprises-table\"]], decls: 3, vars: 5, consts: [[\"id\", \"myGrid\", 1, \"ag-theme-alpine\", 3, \"gridOptions\", \"rowData\", \"columnDefs\", \"gridReady\"], [\"agGrid\", \"\"]], template: function EntreprisesTableComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"app-tableau\", 0, 1);\r\n        i0.ɵɵlistener(\"gridReady\", function EntreprisesTableComponent_Template_app_tableau_gridReady_0_listener() { return ctx.onGridReady(); });\r\n        i0.ɵɵpipe(2, \"async\");\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", i0.ɵɵpipeBind1(2, 3, ctx.rowData))(\"columnDefs\", ctx.columnDefs);\r\n    } }, directives: [i4.TableauComponent], pipes: [i5.AsyncPipe], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}