{"ast":null,"code":"import { DATA_TABLEAU_MODIFIABLE } from '@app/bouchons-html/tableau/tableau-modifiable';\nimport { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/fullstack-components/tableau/services/tableau-configuration-builder.service\";\nimport * as i2 from \"../../services/tableau-modifiable.service\";\nimport * as i3 from \"../../../../fullstack-components/tableau/components/tableau/tableau.component\";\nexport class TableauModifiableComponent {\n  constructor(tableauConfigurationBuilderService, tableauModifiableService) {\n    this.tableauConfigurationBuilderService = tableauConfigurationBuilderService;\n    this.tableauModifiableService = tableauModifiableService;\n    this.rowData = DATA_TABLEAU_MODIFIABLE;\n    this.asynchronousErrors = new BehaviorSubject(null);\n  }\n\n  ngOnInit() {\n    // Configuration générale du tableau\n    this.gridOptions = this.tableauConfigurationBuilderService.createGridConfiguration(); // Colonnes du tableau\n\n    this.columnDefs = this.tableauModifiableService.getColumnDefs(); // Template tableau vide\n\n    this.overlayNoRowsTemplate = this.tableauModifiableService.getOverlayNoRowsTemplate();\n  }\n\n  onGridReady(params) {\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi; // Évènement custom envoyé par le composant enfant après une édition\n\n    this.gridApi.addEventListener('tableDataUpdated', this.tableDataUpdated.bind(this));\n  }\n\n  tableDataUpdated() {// Traiter et sauvegarder les données\n    // Exemple de récupération des données\n    // this.gridApi.forEachNode((row: RowNode) => {\n    //   console.log(row);\n    // });\n  }\n\n  onSaveEdition(editedRow) {\n    const errors = []; // Faire un call au backend de validation ici et retourner les erreurs dans l'observable asynchronousErrors\n\n    editedRow.forEach((row, index) => {\n      // Code d'exemple d'erreur retournée\n      if (row.serveur.length < 3) {\n        errors.push({\n          formKey: 'serveur',\n          isError: true,\n          message: 'L\\'ID du serveur doit contenir au moins 3 caractères',\n          index\n        });\n      }\n\n      if (row.nom.length < 3) {\n        errors.push({\n          formKey: 'nom',\n          isError: true,\n          message: 'Le nom du serveur doit contenir au moins 3 caractères',\n          index\n        });\n      }\n    });\n    this.asynchronousErrors.next(errors);\n  }\n\n  ngOnDestroy() {\n    this.gridApi.removeEventListener('tableDataUpdated', this.tableDataUpdated.bind(this));\n  }\n\n}\n\nTableauModifiableComponent.ɵfac = function TableauModifiableComponent_Factory(t) {\n  return new (t || TableauModifiableComponent)(i0.ɵɵdirectiveInject(i1.TableauConfigurationBuilderService), i0.ɵɵdirectiveInject(i2.TableauModifiableService));\n};\n\nTableauModifiableComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TableauModifiableComponent,\n  selectors: [[\"app-tableau-modifiable\"]],\n  decls: 1,\n  vars: 8,\n  consts: [[3, \"gridOptions\", \"rowData\", \"columnDefs\", \"overlayNoRowsTemplate\", \"pagination\", \"enableAddButton\", \"enableFullEdit\", \"asynchronousErrors\", \"gridReady\", \"saveEdition\"]],\n  template: function TableauModifiableComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-tableau\", 0);\n      i0.ɵɵlistener(\"gridReady\", function TableauModifiableComponent_Template_app_tableau_gridReady_0_listener($event) {\n        return ctx.onGridReady($event);\n      })(\"saveEdition\", function TableauModifiableComponent_Template_app_tableau_saveEdition_0_listener($event) {\n        return ctx.onSaveEdition($event);\n      });\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", ctx.rowData)(\"columnDefs\", ctx.columnDefs)(\"overlayNoRowsTemplate\", ctx.overlayNoRowsTemplate)(\"pagination\", true)(\"enableAddButton\", true)(\"enableFullEdit\", true)(\"asynchronousErrors\", ctx.asynchronousErrors);\n    }\n  },\n  directives: [i3.TableauComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/AC75098185/dev/fullstack-spa-intranet/src/app/core/tableau/components/tableau-modifiable/tableau-modifiable.component.ts"],"names":["DATA_TABLEAU_MODIFIABLE","BehaviorSubject","i0","i1","i2","i3","TableauModifiableComponent","constructor","tableauConfigurationBuilderService","tableauModifiableService","rowData","asynchronousErrors","ngOnInit","gridOptions","createGridConfiguration","columnDefs","getColumnDefs","overlayNoRowsTemplate","getOverlayNoRowsTemplate","onGridReady","params","gridApi","api","gridColumnApi","columnApi","addEventListener","tableDataUpdated","bind","onSaveEdition","editedRow","errors","forEach","row","index","serveur","length","push","formKey","isError","message","nom","next","ngOnDestroy","removeEventListener","ɵfac","TableauModifiableComponent_Factory","t","ɵɵdirectiveInject","TableauConfigurationBuilderService","TableauModifiableService","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","consts","template","TableauModifiableComponent_Template","rf","ctx","ɵɵelementStart","ɵɵlistener","TableauModifiableComponent_Template_app_tableau_gridReady_0_listener","$event","TableauModifiableComponent_Template_app_tableau_saveEdition_0_listener","ɵɵelementEnd","ɵɵproperty","directives","TableauComponent","encapsulation"],"mappings":"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","sourcesContent":["import { DATA_TABLEAU_MODIFIABLE } from '@app/bouchons-html/tableau/tableau-modifiable';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@app/fullstack-components/tableau/services/tableau-configuration-builder.service\";\r\nimport * as i2 from \"../../services/tableau-modifiable.service\";\r\nimport * as i3 from \"../../../../fullstack-components/tableau/components/tableau/tableau.component\";\r\nexport class TableauModifiableComponent {\r\n    constructor(tableauConfigurationBuilderService, tableauModifiableService) {\r\n        this.tableauConfigurationBuilderService = tableauConfigurationBuilderService;\r\n        this.tableauModifiableService = tableauModifiableService;\r\n        this.rowData = DATA_TABLEAU_MODIFIABLE;\r\n        this.asynchronousErrors = new BehaviorSubject(null);\r\n    }\r\n    ngOnInit() {\r\n        // Configuration générale du tableau\r\n        this.gridOptions = this.tableauConfigurationBuilderService.createGridConfiguration();\r\n        // Colonnes du tableau\r\n        this.columnDefs = this.tableauModifiableService.getColumnDefs();\r\n        // Template tableau vide\r\n        this.overlayNoRowsTemplate = this.tableauModifiableService.getOverlayNoRowsTemplate();\r\n    }\r\n    onGridReady(params) {\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        // Évènement custom envoyé par le composant enfant après une édition\r\n        this.gridApi.addEventListener('tableDataUpdated', this.tableDataUpdated.bind(this));\r\n    }\r\n    tableDataUpdated() {\r\n        // Traiter et sauvegarder les données\r\n        // Exemple de récupération des données\r\n        // this.gridApi.forEachNode((row: RowNode) => {\r\n        //   console.log(row);\r\n        // });\r\n    }\r\n    onSaveEdition(editedRow) {\r\n        const errors = [];\r\n        // Faire un call au backend de validation ici et retourner les erreurs dans l'observable asynchronousErrors\r\n        editedRow.forEach((row, index) => {\r\n            // Code d'exemple d'erreur retournée\r\n            if (row.serveur.length < 3) {\r\n                errors.push({ formKey: 'serveur', isError: true, message: 'L\\'ID du serveur doit contenir au moins 3 caractères', index });\r\n            }\r\n            if (row.nom.length < 3) {\r\n                errors.push({ formKey: 'nom', isError: true, message: 'Le nom du serveur doit contenir au moins 3 caractères', index });\r\n            }\r\n        });\r\n        this.asynchronousErrors.next(errors);\r\n    }\r\n    ngOnDestroy() {\r\n        this.gridApi.removeEventListener('tableDataUpdated', this.tableDataUpdated.bind(this));\r\n    }\r\n}\r\nTableauModifiableComponent.ɵfac = function TableauModifiableComponent_Factory(t) { return new (t || TableauModifiableComponent)(i0.ɵɵdirectiveInject(i1.TableauConfigurationBuilderService), i0.ɵɵdirectiveInject(i2.TableauModifiableService)); };\r\nTableauModifiableComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TableauModifiableComponent, selectors: [[\"app-tableau-modifiable\"]], decls: 1, vars: 8, consts: [[3, \"gridOptions\", \"rowData\", \"columnDefs\", \"overlayNoRowsTemplate\", \"pagination\", \"enableAddButton\", \"enableFullEdit\", \"asynchronousErrors\", \"gridReady\", \"saveEdition\"]], template: function TableauModifiableComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"app-tableau\", 0);\r\n        i0.ɵɵlistener(\"gridReady\", function TableauModifiableComponent_Template_app_tableau_gridReady_0_listener($event) { return ctx.onGridReady($event); })(\"saveEdition\", function TableauModifiableComponent_Template_app_tableau_saveEdition_0_listener($event) { return ctx.onSaveEdition($event); });\r\n        i0.ɵɵelementEnd();\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", ctx.rowData)(\"columnDefs\", ctx.columnDefs)(\"overlayNoRowsTemplate\", ctx.overlayNoRowsTemplate)(\"pagination\", true)(\"enableAddButton\", true)(\"enableFullEdit\", true)(\"asynchronousErrors\", ctx.asynchronousErrors);\r\n    } }, directives: [i3.TableauComponent], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}