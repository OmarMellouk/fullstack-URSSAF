{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { ToastCategoryEnum } from '@app/fullstack-components/notes/services/notes.service';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/tableau.service\";\nimport * as i2 from \"../../services/tableau-modifiable.service\";\nimport * as i3 from \"../../services/tableau-errors.service\";\nimport * as i4 from \"@app/fullstack-components/notes/services/notes.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"ag-grid-angular\";\nimport * as i7 from \"../../../notes/components/note-statique/note-statique.component\";\nimport * as i8 from \"../pagination/pagination.component\";\nconst _c0 = [\"agGrid\"];\n\nfunction TableauComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6);\n    i0.ɵɵelement(1, \"app-note-statique\", 7);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"category\", ctx_r0.toastCategoryEnum.ERROR);\n  }\n}\n\nfunction TableauComponent_div_1_div_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(3);\n      return ctx_r10.addRow();\n    });\n    i0.ɵɵtext(1, \" Ajouter \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableauComponent_div_1_div_1_button_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_2_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext(3);\n      return ctx_r12.deleteAllSelected();\n    });\n    i0.ɵɵtext(1, \" Supprimer en masse \");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.enableDeleteButton);\n  }\n}\n\nfunction TableauComponent_div_1_div_1_button_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_3_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext(3);\n      return ctx_r14.startEditing();\n    });\n    i0.ɵɵtext(1, \" D\\u00E9marrer \\u00E9dition \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TableauComponent_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtemplate(1, TableauComponent_div_1_div_1_button_1_Template, 2, 0, \"button\", 12);\n    i0.ɵɵtemplate(2, TableauComponent_div_1_div_1_button_2_Template, 2, 1, \"button\", 13);\n    i0.ɵɵtemplate(3, TableauComponent_div_1_div_1_button_3_Template, 2, 0, \"button\", 12);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.enableAddButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.displayDeleteSelectedButton);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.enableFullEdit);\n  }\n}\n\nfunction TableauComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      return ctx_r16.saveOrCancelEdition(true);\n    });\n    i0.ɵɵelement(2, \"i\", 18);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4, \"Annuler\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_2_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r18 = i0.ɵɵnextContext(2);\n      return ctx_r18.saveOrCancelEdition();\n    });\n    i0.ɵɵelement(6, \"i\", 20);\n    i0.ɵɵelementStart(7, \"span\");\n    i0.ɵɵtext(8, \"Enregistrer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"disabled\", ctx_r6.disableSaveForAsyncErrors);\n  }\n}\n\nfunction TableauComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 8);\n    i0.ɵɵtemplate(1, TableauComponent_div_1_div_1_Template, 4, 3, \"div\", 9);\n    i0.ɵɵtemplate(2, TableauComponent_div_1_div_2_Template, 9, 1, \"div\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isEditing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEditing);\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"has-total-row\": a0\n  };\n};\n\nfunction TableauComponent_app_pagination_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-pagination\", 21);\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(3);\n\n    i0.ɵɵproperty(\"agGrid\", _r2)(\"isEditing\", ctx_r3.isEditing)(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, !!ctx_r3.total));\n  }\n}\n\nfunction TableauComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 22);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"button\", 17);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_5_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.saveOrCancelEdition(true);\n    });\n    i0.ɵɵelement(3, \"i\", 18);\n    i0.ɵɵelementStart(4, \"span\");\n    i0.ɵɵtext(5, \"Annuler\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.saveOrCancelEdition();\n    });\n    i0.ɵɵelement(7, \"i\", 20);\n    i0.ɵɵelementStart(8, \"span\");\n    i0.ɵɵtext(9, \"Enregistrer\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disableSaveForAsyncErrors);\n  }\n}\n\nexport class TableauComponent {\n  constructor(tableauService, tableauModifiableService, tableauErrorsService, notesService) {\n    this.tableauService = tableauService;\n    this.tableauModifiableService = tableauModifiableService;\n    this.tableauErrorsService = tableauErrorsService;\n    this.notesService = notesService;\n    /**\r\n     * Pour un tableau éditable, ajoute les nouvelles lignes à la fin plutôt qu'au début\r\n     * Champ optionnel, peut être laissé à vide pour ajouter les lignes au début\r\n     */\n\n    this.pushNewRows = false;\n    /**\r\n     * Permet d'afficher le bouton pour ajouter une ligne\r\n     * Champ optionnel, ne sera pas afficher par défaut\r\n     */\n\n    this.enableAddButton = false;\n    /**\r\n     * Permet d'afficher le bouton pour éditer tout le tableau\r\n     * Champ optionnel, ne sera pas afficher par défaut\r\n     */\n\n    this.enableFullEdit = false;\n    /**\r\n     * Retourne l'API d'ag-grid lorsqu'elle est prête\r\n     */\n\n    this.gridReady = new EventEmitter();\n    /**\r\n     * Notifie le parent qu'une demande de sauvegarde est envoyée pour la ligne en édition\r\n     * Permet de vérifier les valeurs et mettre à jour asynchronousErrors si besoin\r\n     */\n\n    this.saveEdition = new EventEmitter();\n    this.toastCategoryEnum = ToastCategoryEnum;\n    this.subscriptions = []; // Permet de savoir si une row avait été ajouté lorsque l'utilisateur cancel\n\n    this.newRowAdded = false; // ID HTML unique\n\n    this.uniqueUiID = 'id-' + new Date().getTime(); // Gestion du status du bouton \"Supprimer en masse\"\n\n    this.enableDeleteButton = false; // Gestion de l'affichage des boutons\n\n    this.displayDeleteSelectedButton = false;\n    this.disableSaveForAsyncErrors = false;\n  }\n\n  ngOnInit() {\n    // Ajoute des écoutes d'évènements à la configuration\n    this.setGridOptionOverload(); // Gère l'affichage des boutons autour du tableau\n\n    this.checkButtonsToDisplay();\n  }\n  /**\r\n   * Lorsqu'ag-grid est prêt :\r\n   * - Récupère les paramètres\r\n   * - Affiche la ligne total si besoin\r\n   * - Subscribe au prêt des erreurs asynchrone si l'observable est passé en input\r\n   */\n\n\n  onGridReady(params) {\n    this.gridReady.emit(params);\n    this.gridApi = params.api;\n    this.gridColumnApi = params.columnApi;\n    this.uniqueAgKey = this.gridApi['gridOptionsWrapper'].domDataKey; // Affiche la ligne TOTAL si besoin\n\n    if (this.total) {\n      this.displayTotalPinnedRow();\n    } // Gestion des erreurs asynchrones\n\n\n    this.handleAsynchronousErrors(); // Dans le cas d'un tableau double entête, la hauteur est de 32\n\n    if (this.columnDefs.some(e => !!e.children)) {\n      this.gridApi.setHeaderHeight(32);\n    } else {\n      // Sinon la hauteur de 40 pour une ligne\n      this.gridApi.setHeaderHeight(40);\n    } // Écoute l'observable pour savoir si une ligne demande à passer en édition\n\n\n    this.subscriptions.push(this.tableauModifiableService.onStartEditing(this.uniqueAgKey).subscribe(startEditingTable => {\n      this.startEditing(startEditingTable.index);\n    }));\n  }\n  /**\r\n   * Surcharge l'objet gridOption :\r\n   * - Écoute les changements sur les filtres pour afficher l'overlay no rows si besoin\r\n   * - Écoute les changements sur le modal si il y a une ligne total afin de la mettre à jour\r\n   */\n\n\n  setGridOptionOverload() {\n    // Mise à jour après un filtrage\n    this.gridOptions.onFilterModified = () => {\n      // Après un filtre ne retournant pas de résultat, l'overlay noRows n'est pas trigger\n      // On le trigger donc manuellement ici si besoin\n      if (this.gridApi.getDisplayedRowCount() === 0) {\n        this.gridApi.showNoRowsOverlay();\n      } else {\n        this.gridApi.hideOverlay();\n      } // Redraw les lignes afin d'être sur que les actions handlers soient bien à jour\n\n\n      this.gridApi.redrawRows();\n    }; // Met à jour la ligne total quand le model change (sort, filter, new row, row removed)\n\n\n    if (this.total) {\n      this.gridOptions.onModelUpdated = () => {\n        if (this.gridApi) {\n          this.displayTotalPinnedRow();\n        }\n      };\n    }\n  }\n  /**********************/\n\n  /**    AFFICHAGE     **/\n\n  /**********************/\n\n  /**\r\n   * Gère l'affichage des boutons autour du tableau\r\n   */\n\n\n  checkButtonsToDisplay() {\n    // Parcours les colonnes pour voir s'il faut afficher des boutons\n    this.columnDefs.forEach(columnDef => {\n      var _a, _b; // Affiche le bouton permettant de supprimer en masse\n\n\n      if (columnDef.headerCheckboxSelection && columnDef.field === 'selectAll') {\n        this.displayDeleteSelectedButton = true;\n      } // Configure la popup de suppression\n\n\n      if (this.enableAddButton && ((_a = columnDef.cellRendererParams) === null || _a === void 0 ? void 0 : _a.deleteModal)) {\n        this.deleteModal = (_b = columnDef.cellRendererParams) === null || _b === void 0 ? void 0 : _b.deleteModal;\n      }\n    }); // Met à jour l'affichage du bouton \"Supprimer en masse\" en fonction des checkboxes\n\n    if (this.displayDeleteSelectedButton) {\n      this.gridOptions.onRowSelected = () => {\n        this.enableDeleteButton = this.gridApi.getSelectedNodes().length > 0;\n      };\n    }\n  }\n  /**\r\n   * Met à jour la ligne TOTAL après un filtrage\r\n   */\n\n\n  displayTotalPinnedRow() {\n    if (this.gridApi.getDisplayedRowCount() === 0) {\n      this.gridApi.setPinnedBottomRowData([]);\n    } else {\n      const pinnedBottomData = this.tableauService.generatePinnedBottomRow(this.gridApi, this.gridColumnApi, this.total.labelId, this.total.valuesId);\n      this.gridApi.setPinnedBottomRowData([pinnedBottomData]);\n    }\n  }\n  /**********************/\n\n  /**     EDITION      **/\n\n  /**********************/\n\n  /**\r\n   * Commence l'édition d'une ligne\r\n   */\n\n\n  startEditing(index) {\n    this.isEditing = true; // Active le mode édition des cellules\n\n    this.tableauModifiableService.turnEditionOn(this.gridApi, this.gridColumnApi, index, this.newRowAdded); // Désactiver les clics/filtres/tris sur le tableau\n\n    this.editableTableState = this.tableauModifiableService.disableTableClicks(this.gridApi, this.gridColumnApi);\n  }\n  /**\r\n   * Gère l'affichage des erreurs si il y en a\r\n   */\n\n\n  saveOrCancelEdition(cancel = false) {\n    // Vérifie si il y a des erreurs\n    const stopEdition = this.tableauErrorsService.checkErrors(cancel, this.gridOptions, !!this.asynchronousErrors, this.saveEdition);\n\n    if (stopEdition) {\n      this.stopEditing(cancel);\n    }\n  }\n  /**\r\n   * Arrête l'édition d'une ligne\r\n   */\n\n\n  stopEditing(cancel) {\n    this.isEditing = false;\n    this.disableSaveForAsyncErrors = false; // Met à jour un observable pour notifier que l'edition est terminée\n\n    this.tableauModifiableService.stopEditing(this.uniqueAgKey, cancel); // Supprime la ligne ajoutée en cas d'annulation\n\n    this.tableauModifiableService.deleteRowIfNecessary(this.gridApi, cancel, this.newRowAdded, this.pushNewRows); // Réactive les clics/filtres/tris\n\n    this.tableauModifiableService.enableTableClicks(this.gridApi, this.gridColumnApi, this.editableTableState); // Met à jour la ligne total après édition\n\n    if (this.total) {\n      this.displayTotalPinnedRow();\n    } // Désactive le mode édition des cellules\n\n\n    this.tableauModifiableService.turnEditionOff(this.gridApi, this.gridColumnApi);\n    this.newRowAdded = false; // Informe que les données ont été modifiée\n\n    this.gridApi.dispatchEvent({\n      type: 'tableDataUpdated'\n    });\n  }\n  /**\r\n   * Ajoute une ligne\r\n   */\n\n\n  addRow() {\n    // isEditing va passer à true via l'appel de startEditing depuis l'observable dans la fonction tableauModifiableService.addRow\n    this.newRowAdded = true;\n    const index = this.tableauModifiableService.addRow(this.gridApi, this.gridOptions, this.pushNewRows);\n    this.startEditing(this.pushNewRows ? index - 1 : index);\n  }\n  /**\r\n   * Supprime toutes les lignes sélectionnées\r\n   */\n\n\n  deleteAllSelected() {\n    const selectedNodes = this.gridApi.getSelectedNodes();\n    const indexListToDelete = [];\n    selectedNodes.forEach(node => {\n      indexListToDelete.push(node.rowIndex);\n    });\n    this.tableauModifiableService.deleteRow(this.gridApi, indexListToDelete, this.deleteModal);\n  }\n  /****************************/\n\n  /**   ERREURS ASYNCHRONES  **/\n\n  /****************************/\n\n  /**\r\n   * Gestion des erreurs asynchrones\r\n   */\n\n\n  handleAsynchronousErrors() {\n    var _a; // Gestion des erreurs asynchrones\n\n\n    this.subscriptions.push((_a = this.asynchronousErrors) === null || _a === void 0 ? void 0 : _a.pipe(filter(value => value !== null)).subscribe(errors => {\n      if (errors.length > 0) {\n        // Si il y a des erreurs retournées, alors on les affiche\n        this.tableauErrorsService.displayAsynchronousErrors(this.gridOptions, errors);\n        this.disableSaveForAsyncErrors = true;\n      } else {\n        // Sinon, on peut arrêter l'édition\n        this.stopEditing(false);\n      }\n    }));\n    this.gridApi.addEventListener('formEditionStarted', this.onFormEditionStarted.bind(this));\n  }\n  /**\r\n   * Après une édition, vérifie le status du formulaire pour changer le status du bouton\r\n   */\n\n\n  onFormEditionStarted() {\n    if (this.disableSaveForAsyncErrors) {\n      this.disableSaveForAsyncErrors = this.tableauErrorsService.checkFormsValidities(this.gridOptions);\n    }\n  }\n\n  ngOnDestroy() {\n    this.subscriptions.forEach(subscription => subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\n    this.gridApi.removeEventListener('formEditionStarted', this.onFormEditionStarted.bind(this));\n    this.notesService.removeAllStatic();\n  }\n\n}\n\nTableauComponent.ɵfac = function TableauComponent_Factory(t) {\n  return new (t || TableauComponent)(i0.ɵɵdirectiveInject(i1.TableauService), i0.ɵɵdirectiveInject(i2.TableauModifiableService), i0.ɵɵdirectiveInject(i3.TableauErrorsService), i0.ɵɵdirectiveInject(i4.NotesService));\n};\n\nTableauComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TableauComponent,\n  selectors: [[\"app-tableau\"]],\n  viewQuery: function TableauComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.agGrid = _t.first);\n    }\n  },\n  inputs: {\n    gridOptions: \"gridOptions\",\n    columnDefs: \"columnDefs\",\n    overlayNoRowsTemplate: \"overlayNoRowsTemplate\",\n    rowData: \"rowData\",\n    pagination: \"pagination\",\n    total: \"total\",\n    pushNewRows: \"pushNewRows\",\n    asynchronousErrors: \"asynchronousErrors\",\n    enableAddButton: \"enableAddButton\",\n    enableFullEdit: \"enableFullEdit\"\n  },\n  outputs: {\n    gridReady: \"gridReady\",\n    saveEdition: \"saveEdition\"\n  },\n  decls: 6,\n  vars: 9,\n  consts: [[\"class\", \"mb-2\", 4, \"ngIf\"], [\"class\", \"d-flex mb-2\", 4, \"ngIf\"], [1, \"ag-theme-alpine\", 3, \"id\", \"gridOptions\", \"rowData\", \"columnDefs\", \"overlayNoRowsTemplate\", \"gridReady\"], [\"agGrid\", \"\"], [3, \"agGrid\", \"isEditing\", \"ngClass\", 4, \"ngIf\"], [\"class\", \"d-flex mt-2\", 4, \"ngIf\"], [1, \"mb-2\"], [3, \"category\"], [1, \"d-flex\", \"mb-2\"], [\"class\", \"button-group ml-auto\", 4, \"ngIf\"], [\"class\", \"button-group ml-auto tableau-edit-buttons\", 4, \"ngIf\"], [1, \"button-group\", \"ml-auto\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [1, \"button-group\", \"ml-auto\", \"tableau-edit-buttons\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-b_cancel\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-b_valid\"], [3, \"agGrid\", \"isEditing\", \"ngClass\"], [1, \"d-flex\", \"mt-2\"]],\n  template: function TableauComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, TableauComponent_div_0_Template, 2, 1, \"div\", 0);\n      i0.ɵɵtemplate(1, TableauComponent_div_1_Template, 3, 2, \"div\", 1);\n      i0.ɵɵelementStart(2, \"ag-grid-angular\", 2, 3);\n      i0.ɵɵlistener(\"gridReady\", function TableauComponent_Template_ag_grid_angular_gridReady_2_listener($event) {\n        return ctx.onGridReady($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, TableauComponent_app_pagination_4_Template, 1, 5, \"app-pagination\", 4);\n      i0.ɵɵtemplate(5, TableauComponent_div_5_Template, 10, 1, \"div\", 5);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngIf\", !!ctx.asynchronousErrors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.enableAddButton || ctx.displayDeleteSelectedButton || ctx.enableFullEdit);\n      i0.ɵɵadvance(1);\n      i0.ɵɵpropertyInterpolate(\"id\", ctx.uniqueUiID);\n      i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", ctx.rowData)(\"columnDefs\", ctx.columnDefs)(\"overlayNoRowsTemplate\", ctx.overlayNoRowsTemplate);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.pagination);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isEditing);\n    }\n  },\n  directives: [i5.NgIf, i6.AgGridAngular, i7.NoteStatiqueComponent, i8.PaginationComponent, i5.NgClass],\n  encapsulation: 2\n});","map":{"version":3,"sources":["C:/Users/AC75098185/dev/fullstack-spa-intranet/src/app/fullstack-components/tableau/components/tableau/tableau.component.ts"],"names":["EventEmitter","ToastCategoryEnum","filter","i0","i1","i2","i3","i4","i5","i6","i7","i8","_c0","TableauComponent_div_0_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ctx_r0","ɵɵnextContext","ɵɵadvance","ɵɵproperty","toastCategoryEnum","ERROR","TableauComponent_div_1_div_1_button_1_Template","_r11","ɵɵgetCurrentView","ɵɵlistener","TableauComponent_div_1_div_1_button_1_Template_button_click_0_listener","ɵɵrestoreView","ctx_r10","addRow","ɵɵtext","TableauComponent_div_1_div_1_button_2_Template","_r13","TableauComponent_div_1_div_1_button_2_Template_button_click_0_listener","ctx_r12","deleteAllSelected","ctx_r8","enableDeleteButton","TableauComponent_div_1_div_1_button_3_Template","_r15","TableauComponent_div_1_div_1_button_3_Template_button_click_0_listener","ctx_r14","startEditing","TableauComponent_div_1_div_1_Template","ɵɵtemplate","ctx_r5","enableAddButton","displayDeleteSelectedButton","enableFullEdit","TableauComponent_div_1_div_2_Template","_r17","TableauComponent_div_1_div_2_Template_button_click_1_listener","ctx_r16","saveOrCancelEdition","TableauComponent_div_1_div_2_Template_button_click_5_listener","ctx_r18","ctx_r6","disableSaveForAsyncErrors","TableauComponent_div_1_Template","ctx_r1","isEditing","_c1","a0","TableauComponent_app_pagination_4_Template","ctx_r3","_r2","ɵɵreference","ɵɵpureFunction1","total","TableauComponent_div_5_Template","_r20","TableauComponent_div_5_Template_button_click_2_listener","ctx_r19","TableauComponent_div_5_Template_button_click_6_listener","ctx_r21","ctx_r4","TableauComponent","constructor","tableauService","tableauModifiableService","tableauErrorsService","notesService","pushNewRows","gridReady","saveEdition","subscriptions","newRowAdded","uniqueUiID","Date","getTime","ngOnInit","setGridOptionOverload","checkButtonsToDisplay","onGridReady","params","emit","gridApi","api","gridColumnApi","columnApi","uniqueAgKey","domDataKey","displayTotalPinnedRow","handleAsynchronousErrors","columnDefs","some","e","children","setHeaderHeight","push","onStartEditing","subscribe","startEditingTable","index","gridOptions","onFilterModified","getDisplayedRowCount","showNoRowsOverlay","hideOverlay","redrawRows","onModelUpdated","forEach","columnDef","_a","_b","headerCheckboxSelection","field","cellRendererParams","deleteModal","onRowSelected","getSelectedNodes","length","setPinnedBottomRowData","pinnedBottomData","generatePinnedBottomRow","labelId","valuesId","turnEditionOn","editableTableState","disableTableClicks","cancel","stopEdition","checkErrors","asynchronousErrors","stopEditing","deleteRowIfNecessary","enableTableClicks","turnEditionOff","dispatchEvent","type","selectedNodes","indexListToDelete","node","rowIndex","deleteRow","pipe","value","errors","displayAsynchronousErrors","addEventListener","onFormEditionStarted","bind","checkFormsValidities","ngOnDestroy","subscription","unsubscribe","removeEventListener","removeAllStatic","ɵfac","TableauComponent_Factory","t","ɵɵdirectiveInject","TableauService","TableauModifiableService","TableauErrorsService","NotesService","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","TableauComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","agGrid","first","inputs","overlayNoRowsTemplate","rowData","pagination","outputs","decls","vars","consts","template","TableauComponent_Template","TableauComponent_Template_ag_grid_angular_gridReady_2_listener","$event","ɵɵpropertyInterpolate","directives","NgIf","AgGridAngular","NoteStatiqueComponent","PaginationComponent","NgClass","encapsulation"],"mappings":"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","sourcesContent":["import { EventEmitter } from '@angular/core';\r\nimport { ToastCategoryEnum } from '@app/fullstack-components/notes/services/notes.service';\r\nimport { filter } from 'rxjs/operators';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"../../services/tableau.service\";\r\nimport * as i2 from \"../../services/tableau-modifiable.service\";\r\nimport * as i3 from \"../../services/tableau-errors.service\";\r\nimport * as i4 from \"@app/fullstack-components/notes/services/notes.service\";\r\nimport * as i5 from \"@angular/common\";\r\nimport * as i6 from \"ag-grid-angular\";\r\nimport * as i7 from \"../../../notes/components/note-statique/note-statique.component\";\r\nimport * as i8 from \"../pagination/pagination.component\";\r\nconst _c0 = [\"agGrid\"];\r\nfunction TableauComponent_div_0_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 6);\r\n    i0.ɵɵelement(1, \"app-note-statique\", 7);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r0 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"category\", ctx_r0.toastCategoryEnum.ERROR);\r\n} }\r\nfunction TableauComponent_div_1_div_1_button_1_Template(rf, ctx) { if (rf & 1) {\r\n    const _r11 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 14);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_1_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r11); const ctx_r10 = i0.ɵɵnextContext(3); return ctx_r10.addRow(); });\r\n    i0.ɵɵtext(1, \" Ajouter \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction TableauComponent_div_1_div_1_button_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r13 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 15);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_2_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r13); const ctx_r12 = i0.ɵɵnextContext(3); return ctx_r12.deleteAllSelected(); });\r\n    i0.ɵɵtext(1, \" Supprimer en masse \");\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r8 = i0.ɵɵnextContext(3);\r\n    i0.ɵɵproperty(\"disabled\", !ctx_r8.enableDeleteButton);\r\n} }\r\nfunction TableauComponent_div_1_div_1_button_3_Template(rf, ctx) { if (rf & 1) {\r\n    const _r15 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"button\", 14);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_1_button_3_Template_button_click_0_listener() { i0.ɵɵrestoreView(_r15); const ctx_r14 = i0.ɵɵnextContext(3); return ctx_r14.startEditing(); });\r\n    i0.ɵɵtext(1, \" D\\u00E9marrer \\u00E9dition \");\r\n    i0.ɵɵelementEnd();\r\n} }\r\nfunction TableauComponent_div_1_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 11);\r\n    i0.ɵɵtemplate(1, TableauComponent_div_1_div_1_button_1_Template, 2, 0, \"button\", 12);\r\n    i0.ɵɵtemplate(2, TableauComponent_div_1_div_1_button_2_Template, 2, 1, \"button\", 13);\r\n    i0.ɵɵtemplate(3, TableauComponent_div_1_div_1_button_3_Template, 2, 0, \"button\", 12);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r5 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.enableAddButton);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.displayDeleteSelectedButton);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.enableFullEdit);\r\n} }\r\nfunction TableauComponent_div_1_div_2_Template(rf, ctx) { if (rf & 1) {\r\n    const _r17 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\", 16);\r\n    i0.ɵɵelementStart(1, \"button\", 17);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_2_Template_button_click_1_listener() { i0.ɵɵrestoreView(_r17); const ctx_r16 = i0.ɵɵnextContext(2); return ctx_r16.saveOrCancelEdition(true); });\r\n    i0.ɵɵelement(2, \"i\", 18);\r\n    i0.ɵɵelementStart(3, \"span\");\r\n    i0.ɵɵtext(4, \"Annuler\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(5, \"button\", 19);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_1_div_2_Template_button_click_5_listener() { i0.ɵɵrestoreView(_r17); const ctx_r18 = i0.ɵɵnextContext(2); return ctx_r18.saveOrCancelEdition(); });\r\n    i0.ɵɵelement(6, \"i\", 20);\r\n    i0.ɵɵelementStart(7, \"span\");\r\n    i0.ɵɵtext(8, \"Enregistrer\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r6 = i0.ɵɵnextContext(2);\r\n    i0.ɵɵadvance(5);\r\n    i0.ɵɵproperty(\"disabled\", ctx_r6.disableSaveForAsyncErrors);\r\n} }\r\nfunction TableauComponent_div_1_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelementStart(0, \"div\", 8);\r\n    i0.ɵɵtemplate(1, TableauComponent_div_1_div_1_Template, 4, 3, \"div\", 9);\r\n    i0.ɵɵtemplate(2, TableauComponent_div_1_div_2_Template, 9, 1, \"div\", 10);\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r1 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.isEditing);\r\n    i0.ɵɵadvance(1);\r\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isEditing);\r\n} }\r\nconst _c1 = function (a0) { return { \"has-total-row\": a0 }; };\r\nfunction TableauComponent_app_pagination_4_Template(rf, ctx) { if (rf & 1) {\r\n    i0.ɵɵelement(0, \"app-pagination\", 21);\r\n} if (rf & 2) {\r\n    const ctx_r3 = i0.ɵɵnextContext();\r\n    const _r2 = i0.ɵɵreference(3);\r\n    i0.ɵɵproperty(\"agGrid\", _r2)(\"isEditing\", ctx_r3.isEditing)(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, !!ctx_r3.total));\r\n} }\r\nfunction TableauComponent_div_5_Template(rf, ctx) { if (rf & 1) {\r\n    const _r20 = i0.ɵɵgetCurrentView();\r\n    i0.ɵɵelementStart(0, \"div\", 22);\r\n    i0.ɵɵelementStart(1, \"div\", 11);\r\n    i0.ɵɵelementStart(2, \"button\", 17);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_5_Template_button_click_2_listener() { i0.ɵɵrestoreView(_r20); const ctx_r19 = i0.ɵɵnextContext(); return ctx_r19.saveOrCancelEdition(true); });\r\n    i0.ɵɵelement(3, \"i\", 18);\r\n    i0.ɵɵelementStart(4, \"span\");\r\n    i0.ɵɵtext(5, \"Annuler\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementStart(6, \"button\", 19);\r\n    i0.ɵɵlistener(\"click\", function TableauComponent_div_5_Template_button_click_6_listener() { i0.ɵɵrestoreView(_r20); const ctx_r21 = i0.ɵɵnextContext(); return ctx_r21.saveOrCancelEdition(); });\r\n    i0.ɵɵelement(7, \"i\", 20);\r\n    i0.ɵɵelementStart(8, \"span\");\r\n    i0.ɵɵtext(9, \"Enregistrer\");\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n    i0.ɵɵelementEnd();\r\n} if (rf & 2) {\r\n    const ctx_r4 = i0.ɵɵnextContext();\r\n    i0.ɵɵadvance(6);\r\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disableSaveForAsyncErrors);\r\n} }\r\nexport class TableauComponent {\r\n    constructor(tableauService, tableauModifiableService, tableauErrorsService, notesService) {\r\n        this.tableauService = tableauService;\r\n        this.tableauModifiableService = tableauModifiableService;\r\n        this.tableauErrorsService = tableauErrorsService;\r\n        this.notesService = notesService;\r\n        /**\r\n         * Pour un tableau éditable, ajoute les nouvelles lignes à la fin plutôt qu'au début\r\n         * Champ optionnel, peut être laissé à vide pour ajouter les lignes au début\r\n         */\r\n        this.pushNewRows = false;\r\n        /**\r\n         * Permet d'afficher le bouton pour ajouter une ligne\r\n         * Champ optionnel, ne sera pas afficher par défaut\r\n         */\r\n        this.enableAddButton = false;\r\n        /**\r\n         * Permet d'afficher le bouton pour éditer tout le tableau\r\n         * Champ optionnel, ne sera pas afficher par défaut\r\n         */\r\n        this.enableFullEdit = false;\r\n        /**\r\n         * Retourne l'API d'ag-grid lorsqu'elle est prête\r\n         */\r\n        this.gridReady = new EventEmitter();\r\n        /**\r\n         * Notifie le parent qu'une demande de sauvegarde est envoyée pour la ligne en édition\r\n         * Permet de vérifier les valeurs et mettre à jour asynchronousErrors si besoin\r\n         */\r\n        this.saveEdition = new EventEmitter();\r\n        this.toastCategoryEnum = ToastCategoryEnum;\r\n        this.subscriptions = [];\r\n        // Permet de savoir si une row avait été ajouté lorsque l'utilisateur cancel\r\n        this.newRowAdded = false;\r\n        // ID HTML unique\r\n        this.uniqueUiID = 'id-' + new Date().getTime();\r\n        // Gestion du status du bouton \"Supprimer en masse\"\r\n        this.enableDeleteButton = false;\r\n        // Gestion de l'affichage des boutons\r\n        this.displayDeleteSelectedButton = false;\r\n        this.disableSaveForAsyncErrors = false;\r\n    }\r\n    ngOnInit() {\r\n        // Ajoute des écoutes d'évènements à la configuration\r\n        this.setGridOptionOverload();\r\n        // Gère l'affichage des boutons autour du tableau\r\n        this.checkButtonsToDisplay();\r\n    }\r\n    /**\r\n     * Lorsqu'ag-grid est prêt :\r\n     * - Récupère les paramètres\r\n     * - Affiche la ligne total si besoin\r\n     * - Subscribe au prêt des erreurs asynchrone si l'observable est passé en input\r\n     */\r\n    onGridReady(params) {\r\n        this.gridReady.emit(params);\r\n        this.gridApi = params.api;\r\n        this.gridColumnApi = params.columnApi;\r\n        this.uniqueAgKey = this.gridApi['gridOptionsWrapper'].domDataKey;\r\n        // Affiche la ligne TOTAL si besoin\r\n        if (this.total) {\r\n            this.displayTotalPinnedRow();\r\n        }\r\n        // Gestion des erreurs asynchrones\r\n        this.handleAsynchronousErrors();\r\n        // Dans le cas d'un tableau double entête, la hauteur est de 32\r\n        if (this.columnDefs.some((e) => !!e.children)) {\r\n            this.gridApi.setHeaderHeight(32);\r\n        }\r\n        else {\r\n            // Sinon la hauteur de 40 pour une ligne\r\n            this.gridApi.setHeaderHeight(40);\r\n        }\r\n        // Écoute l'observable pour savoir si une ligne demande à passer en édition\r\n        this.subscriptions.push(this.tableauModifiableService.onStartEditing(this.uniqueAgKey)\r\n            .subscribe((startEditingTable) => {\r\n            this.startEditing(startEditingTable.index);\r\n        }));\r\n    }\r\n    /**\r\n     * Surcharge l'objet gridOption :\r\n     * - Écoute les changements sur les filtres pour afficher l'overlay no rows si besoin\r\n     * - Écoute les changements sur le modal si il y a une ligne total afin de la mettre à jour\r\n     */\r\n    setGridOptionOverload() {\r\n        // Mise à jour après un filtrage\r\n        this.gridOptions.onFilterModified = () => {\r\n            // Après un filtre ne retournant pas de résultat, l'overlay noRows n'est pas trigger\r\n            // On le trigger donc manuellement ici si besoin\r\n            if (this.gridApi.getDisplayedRowCount() === 0) {\r\n                this.gridApi.showNoRowsOverlay();\r\n            }\r\n            else {\r\n                this.gridApi.hideOverlay();\r\n            }\r\n            // Redraw les lignes afin d'être sur que les actions handlers soient bien à jour\r\n            this.gridApi.redrawRows();\r\n        };\r\n        // Met à jour la ligne total quand le model change (sort, filter, new row, row removed)\r\n        if (this.total) {\r\n            this.gridOptions.onModelUpdated = () => {\r\n                if (this.gridApi) {\r\n                    this.displayTotalPinnedRow();\r\n                }\r\n            };\r\n        }\r\n    }\r\n    /**********************/\r\n    /**    AFFICHAGE     **/\r\n    /**********************/\r\n    /**\r\n     * Gère l'affichage des boutons autour du tableau\r\n     */\r\n    checkButtonsToDisplay() {\r\n        // Parcours les colonnes pour voir s'il faut afficher des boutons\r\n        this.columnDefs.forEach((columnDef) => {\r\n            var _a, _b;\r\n            // Affiche le bouton permettant de supprimer en masse\r\n            if (columnDef.headerCheckboxSelection && columnDef.field === 'selectAll') {\r\n                this.displayDeleteSelectedButton = true;\r\n            }\r\n            // Configure la popup de suppression\r\n            if (this.enableAddButton && ((_a = columnDef.cellRendererParams) === null || _a === void 0 ? void 0 : _a.deleteModal)) {\r\n                this.deleteModal = (_b = columnDef.cellRendererParams) === null || _b === void 0 ? void 0 : _b.deleteModal;\r\n            }\r\n        });\r\n        // Met à jour l'affichage du bouton \"Supprimer en masse\" en fonction des checkboxes\r\n        if (this.displayDeleteSelectedButton) {\r\n            this.gridOptions.onRowSelected = () => {\r\n                this.enableDeleteButton = this.gridApi.getSelectedNodes().length > 0;\r\n            };\r\n        }\r\n    }\r\n    /**\r\n     * Met à jour la ligne TOTAL après un filtrage\r\n     */\r\n    displayTotalPinnedRow() {\r\n        if (this.gridApi.getDisplayedRowCount() === 0) {\r\n            this.gridApi.setPinnedBottomRowData([]);\r\n        }\r\n        else {\r\n            const pinnedBottomData = this.tableauService.generatePinnedBottomRow(this.gridApi, this.gridColumnApi, this.total.labelId, this.total.valuesId);\r\n            this.gridApi.setPinnedBottomRowData([pinnedBottomData]);\r\n        }\r\n    }\r\n    /**********************/\r\n    /**     EDITION      **/\r\n    /**********************/\r\n    /**\r\n     * Commence l'édition d'une ligne\r\n     */\r\n    startEditing(index) {\r\n        this.isEditing = true;\r\n        // Active le mode édition des cellules\r\n        this.tableauModifiableService.turnEditionOn(this.gridApi, this.gridColumnApi, index, this.newRowAdded);\r\n        // Désactiver les clics/filtres/tris sur le tableau\r\n        this.editableTableState = this.tableauModifiableService.disableTableClicks(this.gridApi, this.gridColumnApi);\r\n    }\r\n    /**\r\n     * Gère l'affichage des erreurs si il y en a\r\n     */\r\n    saveOrCancelEdition(cancel = false) {\r\n        // Vérifie si il y a des erreurs\r\n        const stopEdition = this.tableauErrorsService.checkErrors(cancel, this.gridOptions, !!this.asynchronousErrors, this.saveEdition);\r\n        if (stopEdition) {\r\n            this.stopEditing(cancel);\r\n        }\r\n    }\r\n    /**\r\n     * Arrête l'édition d'une ligne\r\n     */\r\n    stopEditing(cancel) {\r\n        this.isEditing = false;\r\n        this.disableSaveForAsyncErrors = false;\r\n        // Met à jour un observable pour notifier que l'edition est terminée\r\n        this.tableauModifiableService.stopEditing(this.uniqueAgKey, cancel);\r\n        // Supprime la ligne ajoutée en cas d'annulation\r\n        this.tableauModifiableService.deleteRowIfNecessary(this.gridApi, cancel, this.newRowAdded, this.pushNewRows);\r\n        // Réactive les clics/filtres/tris\r\n        this.tableauModifiableService.enableTableClicks(this.gridApi, this.gridColumnApi, this.editableTableState);\r\n        // Met à jour la ligne total après édition\r\n        if (this.total) {\r\n            this.displayTotalPinnedRow();\r\n        }\r\n        // Désactive le mode édition des cellules\r\n        this.tableauModifiableService.turnEditionOff(this.gridApi, this.gridColumnApi);\r\n        this.newRowAdded = false;\r\n        // Informe que les données ont été modifiée\r\n        this.gridApi.dispatchEvent({ type: 'tableDataUpdated' });\r\n    }\r\n    /**\r\n     * Ajoute une ligne\r\n     */\r\n    addRow() {\r\n        // isEditing va passer à true via l'appel de startEditing depuis l'observable dans la fonction tableauModifiableService.addRow\r\n        this.newRowAdded = true;\r\n        const index = this.tableauModifiableService.addRow(this.gridApi, this.gridOptions, this.pushNewRows);\r\n        this.startEditing(this.pushNewRows ? index - 1 : index);\r\n    }\r\n    /**\r\n     * Supprime toutes les lignes sélectionnées\r\n     */\r\n    deleteAllSelected() {\r\n        const selectedNodes = this.gridApi.getSelectedNodes();\r\n        const indexListToDelete = [];\r\n        selectedNodes.forEach((node) => {\r\n            indexListToDelete.push(node.rowIndex);\r\n        });\r\n        this.tableauModifiableService.deleteRow(this.gridApi, indexListToDelete, this.deleteModal);\r\n    }\r\n    /****************************/\r\n    /**   ERREURS ASYNCHRONES  **/\r\n    /****************************/\r\n    /**\r\n     * Gestion des erreurs asynchrones\r\n     */\r\n    handleAsynchronousErrors() {\r\n        var _a;\r\n        // Gestion des erreurs asynchrones\r\n        this.subscriptions.push((_a = this.asynchronousErrors) === null || _a === void 0 ? void 0 : _a.pipe(filter((value) => value !== null)).subscribe((errors) => {\r\n            if (errors.length > 0) {\r\n                // Si il y a des erreurs retournées, alors on les affiche\r\n                this.tableauErrorsService.displayAsynchronousErrors(this.gridOptions, errors);\r\n                this.disableSaveForAsyncErrors = true;\r\n            }\r\n            else {\r\n                // Sinon, on peut arrêter l'édition\r\n                this.stopEditing(false);\r\n            }\r\n        }));\r\n        this.gridApi.addEventListener('formEditionStarted', this.onFormEditionStarted.bind(this));\r\n    }\r\n    /**\r\n     * Après une édition, vérifie le status du formulaire pour changer le status du bouton\r\n     */\r\n    onFormEditionStarted() {\r\n        if (this.disableSaveForAsyncErrors) {\r\n            this.disableSaveForAsyncErrors = this.tableauErrorsService.checkFormsValidities(this.gridOptions);\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        this.subscriptions.forEach((subscription) => subscription === null || subscription === void 0 ? void 0 : subscription.unsubscribe());\r\n        this.gridApi.removeEventListener('formEditionStarted', this.onFormEditionStarted.bind(this));\r\n        this.notesService.removeAllStatic();\r\n    }\r\n}\r\nTableauComponent.ɵfac = function TableauComponent_Factory(t) { return new (t || TableauComponent)(i0.ɵɵdirectiveInject(i1.TableauService), i0.ɵɵdirectiveInject(i2.TableauModifiableService), i0.ɵɵdirectiveInject(i3.TableauErrorsService), i0.ɵɵdirectiveInject(i4.NotesService)); };\r\nTableauComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: TableauComponent, selectors: [[\"app-tableau\"]], viewQuery: function TableauComponent_Query(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵviewQuery(_c0, 5);\r\n    } if (rf & 2) {\r\n        let _t;\r\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.agGrid = _t.first);\r\n    } }, inputs: { gridOptions: \"gridOptions\", columnDefs: \"columnDefs\", overlayNoRowsTemplate: \"overlayNoRowsTemplate\", rowData: \"rowData\", pagination: \"pagination\", total: \"total\", pushNewRows: \"pushNewRows\", asynchronousErrors: \"asynchronousErrors\", enableAddButton: \"enableAddButton\", enableFullEdit: \"enableFullEdit\" }, outputs: { gridReady: \"gridReady\", saveEdition: \"saveEdition\" }, decls: 6, vars: 9, consts: [[\"class\", \"mb-2\", 4, \"ngIf\"], [\"class\", \"d-flex mb-2\", 4, \"ngIf\"], [1, \"ag-theme-alpine\", 3, \"id\", \"gridOptions\", \"rowData\", \"columnDefs\", \"overlayNoRowsTemplate\", \"gridReady\"], [\"agGrid\", \"\"], [3, \"agGrid\", \"isEditing\", \"ngClass\", 4, \"ngIf\"], [\"class\", \"d-flex mt-2\", 4, \"ngIf\"], [1, \"mb-2\"], [3, \"category\"], [1, \"d-flex\", \"mb-2\"], [\"class\", \"button-group ml-auto\", 4, \"ngIf\"], [\"class\", \"button-group ml-auto tableau-edit-buttons\", 4, \"ngIf\"], [1, \"button-group\", \"ml-auto\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"button\", \"class\", \"btn btn-secondary\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", 3, \"disabled\", \"click\"], [1, \"button-group\", \"ml-auto\", \"tableau-edit-buttons\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-b_cancel\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"aria-hidden\", \"true\", 1, \"icon-b_valid\"], [3, \"agGrid\", \"isEditing\", \"ngClass\"], [1, \"d-flex\", \"mt-2\"]], template: function TableauComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵtemplate(0, TableauComponent_div_0_Template, 2, 1, \"div\", 0);\r\n        i0.ɵɵtemplate(1, TableauComponent_div_1_Template, 3, 2, \"div\", 1);\r\n        i0.ɵɵelementStart(2, \"ag-grid-angular\", 2, 3);\r\n        i0.ɵɵlistener(\"gridReady\", function TableauComponent_Template_ag_grid_angular_gridReady_2_listener($event) { return ctx.onGridReady($event); });\r\n        i0.ɵɵelementEnd();\r\n        i0.ɵɵtemplate(4, TableauComponent_app_pagination_4_Template, 1, 5, \"app-pagination\", 4);\r\n        i0.ɵɵtemplate(5, TableauComponent_div_5_Template, 10, 1, \"div\", 5);\r\n    } if (rf & 2) {\r\n        i0.ɵɵproperty(\"ngIf\", !!ctx.asynchronousErrors);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.enableAddButton || ctx.displayDeleteSelectedButton || ctx.enableFullEdit);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵpropertyInterpolate(\"id\", ctx.uniqueUiID);\r\n        i0.ɵɵproperty(\"gridOptions\", ctx.gridOptions)(\"rowData\", ctx.rowData)(\"columnDefs\", ctx.columnDefs)(\"overlayNoRowsTemplate\", ctx.overlayNoRowsTemplate);\r\n        i0.ɵɵadvance(2);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.pagination);\r\n        i0.ɵɵadvance(1);\r\n        i0.ɵɵproperty(\"ngIf\", ctx.isEditing);\r\n    } }, directives: [i5.NgIf, i6.AgGridAngular, i7.NoteStatiqueComponent, i8.PaginationComponent, i5.NgClass], encapsulation: 2 });\r\n"]},"metadata":{},"sourceType":"module"}