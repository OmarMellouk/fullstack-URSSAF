import { HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';
import { Observable } from 'rxjs';
import { LoginService } from '../service/login.service';
import * as i0 from "@angular/core";
/**
 * Intercepteur qui ajoute à toutes les requêtes le jeton dans l'entête Bearer
 * Ne fait rien si l'utilisateur n'est pas connecté
 */
export declare class PrismeBearerInterceptor implements HttpInterceptor {
    protected loginService: LoginService;
    constructor(loginService: LoginService);
    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>;
    ajoutJeton(req: HttpRequest<any>): HttpRequest<any>;
    /**
     * Vérifie si on a déjà le jeton d'authentification dans les entêtes de la requête
     * @param req la requête http
     */
    private hasBearerToken;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrismeBearerInterceptor, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<PrismeBearerInterceptor>;
}
