import { ModuleWithProviders } from '@angular/core';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
import * as i2 from "@angular/common/http";
import * as i3 from "ngx-webstorage-service";
import * as i4 from "@angular/router";
/**
 * Function permettant d'initiliser la configuration de prismeAngularInitModule
 *
 * @export
 * @param  cleStockage : clé de stockage utilisé dans le sessionStorage
 * @returns la classe PrismeAngularInitConfig instanciée
 */
/**
 * Module permettant d'initialiser la partie minimale de prisme.
 * Il permet entre d'initialiser les modules nécessaires au bearerInterceptor
 * Il prend en paramètre optionnel la clé de stockage
 * @export
 */
export declare class PrismeAngularInitModule {
    static forRoot(cleStockage: string, utiliserLocalStorage: boolean): ModuleWithProviders<PrismeAngularInitModule>;
    static ɵfac: i0.ɵɵFactoryDeclaration<PrismeAngularInitModule, never>;
    static ɵmod: i0.ɵɵNgModuleDeclaration<PrismeAngularInitModule, never, [typeof i1.CommonModule, typeof i2.HttpClientModule, typeof i3.StorageServiceModule, typeof i4.RouterModule], never>;
    static ɵinj: i0.ɵɵInjectorDeclaration<PrismeAngularInitModule>;
}
