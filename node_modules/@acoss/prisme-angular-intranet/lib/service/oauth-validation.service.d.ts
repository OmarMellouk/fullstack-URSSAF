import { PrismeAngularConfiguration } from '../prisme-angular.config';
import * as i0 from "@angular/core";
export declare class OauthValidationService {
    private environment;
    constructor(environment: PrismeAngularConfiguration);
    /**
     * Valider que le champ "iss" du token correspond bien au provider
     * "Malicious compliance" vis à vis du guide développeur
     * @param token Jeton
     */
    validerIss(token: any): boolean;
    /**
     * Valider que le champ "exp" du token ne correspond pas à une date passée
     * @param token Jeton
     */
    validerExp(token: any): boolean;
    /**
     * Valider que le token est correctement signé
     * @param token Jeton
     * @param keys Cles
     * @param alg Algorithme
     */
    validerSignature(token: any, keys: any, alg: string): boolean;
    /**
     * Valider que le champ "aud" du token n'est pas vide
     * @param token Jeton
     */
    validerAudNonVide(token: any): boolean;
    /**
   * Valider que le champ "sub" du token est égal au sujet + '@' + le client ID requis
   * @param token Jeton
   * @param sujet Sujet
   * @param client_id Identifiant
   */
    validerSubOcean(token: any, client_id: string): boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<OauthValidationService, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<OauthValidationService>;
}
