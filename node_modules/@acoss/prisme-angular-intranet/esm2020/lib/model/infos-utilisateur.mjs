/**
 * Permet d'acceder aux donnée fournie par le service user-info
 */
export class InfosUtilisateur {
    constructor(data) {
        this.dataInfosUtilisateur = data;
    }
    getNom() {
        return this.dataInfosUtilisateur.auser_sn;
    }
    getPrenom() {
        return this.dataInfosUtilisateur.auser_givenname;
    }
    /**
     * Retourne uen chaine contenant le prénom et le nom de l'utilisateur
     */
    getNomComplet() {
        return this.dataInfosUtilisateur.auser_cn;
    }
    getCodeAgent() {
        return this.dataInfosUtilisateur.auser_uid;
    }
    getIdSnv2() {
        return this.dataInfosUtilisateur.auser_idsnv2;
    }
    getCodeOrganisme() {
        return this.dataInfosUtilisateur.auser_codeorg;
    }
    getInterRegion() {
        return this.dataInfosUtilisateur.auser_ircode;
    }
    getAdresseMail() {
        return this.dataInfosUtilisateur.auser_mail;
    }
    getVille() {
        return this.dataInfosUtilisateur.auser_persnomville;
    }
    getAdresseEtablissement() {
        return this.dataInfosUtilisateur.auser_etabaddr;
    }
    /**
     * Retourne la liste des droits de l'utilisateur
     */
    getDroits() {
        return this.dataInfosUtilisateur.access;
    }
    /**
     * Retourne les données fournie par le service user-info en JSon
     */
    getDataInfosUtilisateur() {
        return this.dataInfosUtilisateur;
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5mb3MtdXRpbGlzYXRldXIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hY29zcy9wcmlzbWUtYW5ndWxhci1pbnRyYW5ldC9zcmMvbGliL21vZGVsL2luZm9zLXV0aWxpc2F0ZXVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBQ0gsTUFBTSxPQUFPLGdCQUFnQjtJQUt6QixZQUFZLElBQVM7UUFDakIsSUFBSSxDQUFDLG9CQUFvQixHQUFHLElBQUksQ0FBQztJQUNyQyxDQUFDO0lBRU0sTUFBTTtRQUNULE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQztJQUM5QyxDQUFDO0lBRU0sU0FBUztRQUNaLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGVBQWUsQ0FBQztJQUNyRCxDQUFDO0lBRUQ7O09BRUc7SUFDSSxhQUFhO1FBQ2hCLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFFBQVEsQ0FBQztJQUM5QyxDQUFDO0lBRU0sWUFBWTtRQUNmLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFNBQVMsQ0FBQztJQUMvQyxDQUFDO0lBRU0sU0FBUztRQUNaLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLFlBQVksQ0FBQztJQUNsRCxDQUFDO0lBRU0sZ0JBQWdCO1FBQ25CLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLGFBQWEsQ0FBQztJQUNuRCxDQUFDO0lBRU0sY0FBYztRQUNqQixPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxZQUFZLENBQUM7SUFDbEQsQ0FBQztJQUVNLGNBQWM7UUFDakIsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsVUFBVSxDQUFDO0lBQ2hELENBQUM7SUFFTSxRQUFRO1FBQ1gsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUMsa0JBQWtCLENBQUM7SUFDeEQsQ0FBQztJQUVNLHVCQUF1QjtRQUMxQixPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxjQUFjLENBQUM7SUFDcEQsQ0FBQztJQUVEOztPQUVHO0lBQ0ksU0FBUztRQUNaLE9BQU8sSUFBSSxDQUFDLG9CQUFvQixDQUFDLE1BQU0sQ0FBQztJQUM1QyxDQUFDO0lBRUQ7O09BRUc7SUFDSSx1QkFBdUI7UUFDMUIsT0FBTyxJQUFJLENBQUMsb0JBQW9CLENBQUM7SUFDckMsQ0FBQztDQUVKIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBQZXJtZXQgZCdhY2NlZGVyIGF1eCBkb25uw6llIGZvdXJuaWUgcGFyIGxlIHNlcnZpY2UgdXNlci1pbmZvXG4gKi9cbmV4cG9ydCBjbGFzcyBJbmZvc1V0aWxpc2F0ZXVyIHtcblxuICAgIC8vIGxlcyBkb25uw6llcyBmb3VybmllIHBhcyB1c2VyLWluZm9zIGVuIEpzb25cbiAgICBwcml2YXRlIGRhdGFJbmZvc1V0aWxpc2F0ZXVyOiBhbnk7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhOiBhbnkpIHtcbiAgICAgICAgdGhpcy5kYXRhSW5mb3NVdGlsaXNhdGV1ciA9IGRhdGE7XG4gICAgfVxuXG4gICAgcHVibGljIGdldE5vbSgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhSW5mb3NVdGlsaXNhdGV1ci5hdXNlcl9zbjtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0UHJlbm9tKCk6IHN0cmluZyB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFJbmZvc1V0aWxpc2F0ZXVyLmF1c2VyX2dpdmVubmFtZTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBSZXRvdXJuZSB1ZW4gY2hhaW5lIGNvbnRlbmFudCBsZSBwcsOpbm9tIGV0IGxlIG5vbSBkZSBsJ3V0aWxpc2F0ZXVyXG4gICAgICovXG4gICAgcHVibGljIGdldE5vbUNvbXBsZXQoKTogc3RyaW5nIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9zVXRpbGlzYXRldXIuYXVzZXJfY247XG4gICAgfVxuXG4gICAgcHVibGljIGdldENvZGVBZ2VudCgpOiBzdHJpbmcge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhSW5mb3NVdGlsaXNhdGV1ci5hdXNlcl91aWQ7XG4gICAgfVxuXG4gICAgcHVibGljIGdldElkU252MigpOiBzdHJpbmcgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9zVXRpbGlzYXRldXIuYXVzZXJfaWRzbnYyO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRDb2RlT3JnYW5pc21lKCk6IHN0cmluZyAge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhSW5mb3NVdGlsaXNhdGV1ci5hdXNlcl9jb2Rlb3JnO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRJbnRlclJlZ2lvbigpOiBzdHJpbmcgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9zVXRpbGlzYXRldXIuYXVzZXJfaXJjb2RlO1xuICAgIH1cblxuICAgIHB1YmxpYyBnZXRBZHJlc3NlTWFpbCgpOiBzdHJpbmcgIHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9zVXRpbGlzYXRldXIuYXVzZXJfbWFpbDtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0VmlsbGUoKTogc3RyaW5nICB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFJbmZvc1V0aWxpc2F0ZXVyLmF1c2VyX3BlcnNub212aWxsZTtcbiAgICB9XG5cbiAgICBwdWJsaWMgZ2V0QWRyZXNzZUV0YWJsaXNzZW1lbnQoKTogc3RyaW5nICB7XG4gICAgICAgIHJldHVybiB0aGlzLmRhdGFJbmZvc1V0aWxpc2F0ZXVyLmF1c2VyX2V0YWJhZGRyO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFJldG91cm5lIGxhIGxpc3RlIGRlcyBkcm9pdHMgZGUgbCd1dGlsaXNhdGV1clxuICAgICAqL1xuICAgIHB1YmxpYyBnZXREcm9pdHMoKTogc3RyaW5nW10ge1xuICAgICAgICByZXR1cm4gdGhpcy5kYXRhSW5mb3NVdGlsaXNhdGV1ci5hY2Nlc3M7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogUmV0b3VybmUgbGVzIGRvbm7DqWVzIGZvdXJuaWUgcGFyIGxlIHNlcnZpY2UgdXNlci1pbmZvIGVuIEpTb25cbiAgICAgKi9cbiAgICBwdWJsaWMgZ2V0RGF0YUluZm9zVXRpbGlzYXRldXIoKTogYW55IHtcbiAgICAgICAgcmV0dXJuIHRoaXMuZGF0YUluZm9zVXRpbGlzYXRldXI7XG4gICAgfVxuXG59XG4iXX0=