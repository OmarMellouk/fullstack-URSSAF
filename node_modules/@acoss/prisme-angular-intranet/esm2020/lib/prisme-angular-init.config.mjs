import { Inject, Injectable, InjectionToken } from '@angular/core';
import * as i0 from "@angular/core";
export const CLE_STOCKAGE = new InjectionToken('CLE_STOCKAGE');
export const UTILISER_LOCAL_STORAGE_TOKEN = new InjectionToken('UTILISER_LOCAL_STORAGE_TOKEN');
export class PrismeAngularInitConfig {
    constructor(cleStockage, utiliserLocalStorageToken) {
        if (cleStockage) {
            this.setCleStockage(cleStockage);
        }
        else {
            this.setCleStockage('defaultPrismeStorageKey');
        }
        if (utiliserLocalStorageToken) {
            this.utiliserLocalStorage = utiliserLocalStorageToken;
        }
        else {
            this.utiliserLocalStorage = false;
        }
    }
    setCleStockage(idCleStockage) {
        this.idCleStockage = idCleStockage;
        this.cleStockageInfosUtilisateur = this.idCleStockage + '_User';
        this.cleStockageDernierNonce = this.idCleStockage + '_Nonce';
        this.cleStockageDernierState = this.idCleStockage + '_LastState';
        this.cleStockageStateUtilise = this.idCleStockage + '_UsedState';
        this.cleStockageEtatRafraichissement = this.idCleStockage + '_RefreshState';
        this.cleStockagePageFrom = this.idCleStockage + '_PageFrom';
    }
}
PrismeAngularInitConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitConfig, deps: [{ token: CLE_STOCKAGE }, { token: UTILISER_LOCAL_STORAGE_TOKEN }], target: i0.ɵɵFactoryTarget.Injectable });
PrismeAngularInitConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitConfig });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitConfig, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return [{ type: undefined, decorators: [{
                    type: Inject,
                    args: [CLE_STOCKAGE]
                }] }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [UTILISER_LOCAL_STORAGE_TOKEN]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpc21lLWFuZ3VsYXItaW5pdC5jb25maWcuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hY29zcy9wcmlzbWUtYW5ndWxhci1pbnRyYW5ldC9zcmMvbGliL3ByaXNtZS1hbmd1bGFyLWluaXQuY29uZmlnLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxNQUFNLEVBQUUsVUFBVSxFQUFFLGNBQWMsRUFBRSxNQUFNLGVBQWUsQ0FBQzs7QUFFbkUsTUFBTSxDQUFDLE1BQU0sWUFBWSxHQUFHLElBQUksY0FBYyxDQUFTLGNBQWMsQ0FBQyxDQUFDO0FBQ3ZFLE1BQU0sQ0FBQyxNQUFNLDRCQUE0QixHQUFHLElBQUksY0FBYyxDQUFTLDhCQUE4QixDQUFDLENBQUM7QUFHdkcsTUFBTSxPQUFRLHVCQUF1QjtJQW9CbkMsWUFBbUMsV0FBbUIsRUFDSCx5QkFBa0M7UUFDbkYsSUFBSyxXQUFXLEVBQUU7WUFDaEIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxXQUFXLENBQUMsQ0FBQztTQUNsQzthQUFNO1lBQ0wsSUFBSSxDQUFDLGNBQWMsQ0FBQyx5QkFBeUIsQ0FBQyxDQUFDO1NBQ2hEO1FBRUQsSUFBSSx5QkFBeUIsRUFBRTtZQUM3QixJQUFJLENBQUMsb0JBQW9CLEdBQUcseUJBQXlCLENBQUM7U0FDdkQ7YUFBTTtZQUNMLElBQUksQ0FBQyxvQkFBb0IsR0FBRyxLQUFLLENBQUM7U0FDbkM7SUFDSCxDQUFDO0lBdkJPLGNBQWMsQ0FBQyxhQUFxQjtRQUMxQyxJQUFJLENBQUMsYUFBYSxHQUFHLGFBQWEsQ0FBQztRQUNuQyxJQUFJLENBQUMsMkJBQTJCLEdBQUcsSUFBSSxDQUFDLGFBQWEsR0FBRyxPQUFPLENBQUM7UUFDaEUsSUFBSSxDQUFDLHVCQUF1QixHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsUUFBUSxDQUFDO1FBQzdELElBQUksQ0FBQyx1QkFBdUIsR0FBRyxJQUFJLENBQUMsYUFBYSxHQUFHLFlBQVksQ0FBQztRQUNqRSxJQUFJLENBQUMsdUJBQXVCLEdBQUcsSUFBSSxDQUFDLGFBQWEsR0FBRyxZQUFZLENBQUM7UUFDakUsSUFBSSxDQUFDLCtCQUErQixHQUFHLElBQUksQ0FBQyxhQUFhLEdBQUcsZUFBZSxDQUFDO1FBQzVFLElBQUksQ0FBQyxtQkFBbUIsR0FBRyxJQUFJLENBQUMsYUFBYSxHQUFHLFdBQVcsQ0FBQztJQUM5RCxDQUFDOztvSEFsQlcsdUJBQXVCLGtCQW9CZCxZQUFZLGFBQ1osNEJBQTRCO3dIQXJCckMsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBRHBDLFVBQVU7OzBCQXFCSyxNQUFNOzJCQUFDLFlBQVk7OzBCQUNuQixNQUFNOzJCQUFDLDRCQUE0QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuZXhwb3J0IGNvbnN0IENMRV9TVE9DS0FHRSA9IG5ldyBJbmplY3Rpb25Ub2tlbjxzdHJpbmc+KCdDTEVfU1RPQ0tBR0UnKTtcbmV4cG9ydCBjb25zdCBVVElMSVNFUl9MT0NBTF9TVE9SQUdFX1RPS0VOID0gbmV3IEluamVjdGlvblRva2VuPHN0cmluZz4oJ1VUSUxJU0VSX0xPQ0FMX1NUT1JBR0VfVE9LRU4nKTtcblxuQEluamVjdGFibGUoKVxuZXhwb3J0ICBjbGFzcyBQcmlzbWVBbmd1bGFySW5pdENvbmZpZyB7XG4gIGlkQ2xlU3RvY2thZ2U6IHN0cmluZztcbiAgY2xlU3RvY2thZ2VJbmZvc1V0aWxpc2F0ZXVyOiBzdHJpbmc7XG4gIGNsZVN0b2NrYWdlRGVybmllck5vbmNlOiBzdHJpbmc7XG4gIGNsZVN0b2NrYWdlRGVybmllclN0YXRlOiBzdHJpbmc7XG4gIGNsZVN0b2NrYWdlU3RhdGVVdGlsaXNlOiBzdHJpbmc7XG4gIGNsZVN0b2NrYWdlRXRhdFJhZnJhaWNoaXNzZW1lbnQ6IHN0cmluZztcbiAgY2xlU3RvY2thZ2VQYWdlRnJvbTogc3RyaW5nO1xuICB1dGlsaXNlckxvY2FsU3RvcmFnZTogYm9vbGVhbjtcblxuICBwcml2YXRlIHNldENsZVN0b2NrYWdlKGlkQ2xlU3RvY2thZ2U6IHN0cmluZykge1xuICAgIHRoaXMuaWRDbGVTdG9ja2FnZSA9IGlkQ2xlU3RvY2thZ2U7XG4gICAgdGhpcy5jbGVTdG9ja2FnZUluZm9zVXRpbGlzYXRldXIgPSB0aGlzLmlkQ2xlU3RvY2thZ2UgKyAnX1VzZXInO1xuICAgIHRoaXMuY2xlU3RvY2thZ2VEZXJuaWVyTm9uY2UgPSB0aGlzLmlkQ2xlU3RvY2thZ2UgKyAnX05vbmNlJztcbiAgICB0aGlzLmNsZVN0b2NrYWdlRGVybmllclN0YXRlID0gdGhpcy5pZENsZVN0b2NrYWdlICsgJ19MYXN0U3RhdGUnO1xuICAgIHRoaXMuY2xlU3RvY2thZ2VTdGF0ZVV0aWxpc2UgPSB0aGlzLmlkQ2xlU3RvY2thZ2UgKyAnX1VzZWRTdGF0ZSc7XG4gICAgdGhpcy5jbGVTdG9ja2FnZUV0YXRSYWZyYWljaGlzc2VtZW50ID0gdGhpcy5pZENsZVN0b2NrYWdlICsgJ19SZWZyZXNoU3RhdGUnO1xuICAgIHRoaXMuY2xlU3RvY2thZ2VQYWdlRnJvbSA9IHRoaXMuaWRDbGVTdG9ja2FnZSArICdfUGFnZUZyb20nO1xuICB9XG5cbiAgY29uc3RydWN0b3IoIEBJbmplY3QoQ0xFX1NUT0NLQUdFKSBjbGVTdG9ja2FnZTogc3RyaW5nLFxuICAgICAgICAgICAgICAgQEluamVjdChVVElMSVNFUl9MT0NBTF9TVE9SQUdFX1RPS0VOKSB1dGlsaXNlckxvY2FsU3RvcmFnZVRva2VuOiBib29sZWFuKSB7XG4gICAgaWYgKCBjbGVTdG9ja2FnZSkge1xuICAgICAgdGhpcy5zZXRDbGVTdG9ja2FnZShjbGVTdG9ja2FnZSk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMuc2V0Q2xlU3RvY2thZ2UoJ2RlZmF1bHRQcmlzbWVTdG9yYWdlS2V5Jyk7XG4gICAgfVxuXG4gICAgaWYgKHV0aWxpc2VyTG9jYWxTdG9yYWdlVG9rZW4pIHtcbiAgICAgIHRoaXMudXRpbGlzZXJMb2NhbFN0b3JhZ2UgPSB1dGlsaXNlckxvY2FsU3RvcmFnZVRva2VuO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnV0aWxpc2VyTG9jYWxTdG9yYWdlID0gZmFsc2U7XG4gICAgfVxuICB9XG59XG5cbiJdfQ==