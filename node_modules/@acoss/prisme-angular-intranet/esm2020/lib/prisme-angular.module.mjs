import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { DefaultFailureLoginHandler } from './handler/default-failure-login.handler';
import { DefaultSuccessLoginHandler } from './handler/default-success-login.handler';
import { PRISME_SUCCESS_LOGIN_HANDLER, PRISME_FAILURE_LOGIN_HANDLER, PrismeAngularConfiguration } from './prisme-angular.config';
import { CallbackComponent } from './component/callback/callback.component';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
/**
 * Ce module permet de charger la configuration de prisme.Il va de paire avec le module
 * PrismeAngularInitConfiguration
 *
 * @export
 */
export class PrismeAngularModule {
}
PrismeAngularModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PrismeAngularModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularModule, declarations: [CallbackComponent], imports: [CommonModule, i1.RouterModule], exports: [CallbackComponent] });
PrismeAngularModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularModule, providers: [
        // L'application appelante doit fournir un prismeAngularConfiguration
        { provide: PrismeAngularConfiguration, useExisting: 'PrismeAngularConfiguration' },
        // Si l'application appelante ne surcharge par le success andler, alors on utilise celui par défaut.
        { provide: PRISME_SUCCESS_LOGIN_HANDLER, useClass: DefaultSuccessLoginHandler },
        // Si l'application appelante ne surcharge par le failure handler, alors on utilise celui par défaut.
        { provide: PRISME_FAILURE_LOGIN_HANDLER, useClass: DefaultFailureLoginHandler },
    ], imports: [CommonModule,
        RouterModule.forRoot([], { relativeLinkResolution: 'legacy' })] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule,
                        RouterModule.forRoot([], { relativeLinkResolution: 'legacy' })],
                    declarations: [CallbackComponent],
                    exports: [CallbackComponent],
                    providers: [
                        // L'application appelante doit fournir un prismeAngularConfiguration
                        { provide: PrismeAngularConfiguration, useExisting: 'PrismeAngularConfiguration' },
                        // Si l'application appelante ne surcharge par le success andler, alors on utilise celui par défaut.
                        { provide: PRISME_SUCCESS_LOGIN_HANDLER, useClass: DefaultSuccessLoginHandler },
                        // Si l'application appelante ne surcharge par le failure handler, alors on utilise celui par défaut.
                        { provide: PRISME_FAILURE_LOGIN_HANDLER, useClass: DefaultFailureLoginHandler },
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpc21lLWFuZ3VsYXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvYWNvc3MvcHJpc21lLWFuZ3VsYXItaW50cmFuZXQvc3JjL2xpYi9wcmlzbWUtYW5ndWxhci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3JGLE9BQU8sRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBQ3JGLE9BQU8sRUFBQyw0QkFBNEIsRUFBRSw0QkFBNEIsRUFBRSwwQkFBMEIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQ2hJLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlDQUF5QyxDQUFDOzs7QUFHNUU7Ozs7O0dBS0c7QUFpQkgsTUFBTSxPQUFPLG1CQUFtQjs7Z0hBQW5CLG1CQUFtQjtpSEFBbkIsbUJBQW1CLGlCQWJmLGlCQUFpQixhQUZyQixZQUFZLDhCQUdiLGlCQUFpQjtpSEFZaEIsbUJBQW1CLGFBWGxCO1FBQ1oscUVBQXFFO1FBQ3JFLEVBQUMsT0FBTyxFQUFHLDBCQUEwQixFQUFFLFdBQVcsRUFBRyw0QkFBNEIsRUFBQztRQUVsRixvR0FBb0c7UUFDcEcsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsUUFBUSxFQUFFLDBCQUEwQixFQUFDO1FBRTlFLHFHQUFxRztRQUNyRyxFQUFFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxRQUFRLEVBQUcsMEJBQTBCLEVBQUM7S0FDaEYsWUFiWSxZQUFZO1FBQ3ZCLFlBQVksQ0FBQyxPQUFPLENBQUMsRUFBRSxFQUFFLEVBQUUsc0JBQXNCLEVBQUUsUUFBUSxFQUFFLENBQUM7MkZBY25ELG1CQUFtQjtrQkFoQi9CLFFBQVE7bUJBQUM7b0JBQ1IsT0FBTyxFQUFHLENBQUMsWUFBWTt3QkFDdkIsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsQ0FBQyxDQUFDO29CQUMvRCxZQUFZLEVBQUUsQ0FBQyxpQkFBaUIsQ0FBQztvQkFDakMsT0FBTyxFQUFFLENBQUMsaUJBQWlCLENBQUM7b0JBQzVCLFNBQVMsRUFBRzt3QkFDWixxRUFBcUU7d0JBQ3JFLEVBQUMsT0FBTyxFQUFHLDBCQUEwQixFQUFFLFdBQVcsRUFBRyw0QkFBNEIsRUFBQzt3QkFFbEYsb0dBQW9HO3dCQUNwRyxFQUFFLE9BQU8sRUFBRSw0QkFBNEIsRUFBRSxRQUFRLEVBQUUsMEJBQTBCLEVBQUM7d0JBRTlFLHFHQUFxRzt3QkFDckcsRUFBRSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsUUFBUSxFQUFHLDBCQUEwQixFQUFDO3FCQUNoRjtpQkFDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQgeyBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IERlZmF1bHRGYWlsdXJlTG9naW5IYW5kbGVyIH0gZnJvbSAnLi9oYW5kbGVyL2RlZmF1bHQtZmFpbHVyZS1sb2dpbi5oYW5kbGVyJztcbmltcG9ydCB7IERlZmF1bHRTdWNjZXNzTG9naW5IYW5kbGVyIH0gZnJvbSAnLi9oYW5kbGVyL2RlZmF1bHQtc3VjY2Vzcy1sb2dpbi5oYW5kbGVyJztcbmltcG9ydCB7UFJJU01FX1NVQ0NFU1NfTE9HSU5fSEFORExFUiwgUFJJU01FX0ZBSUxVUkVfTE9HSU5fSEFORExFUiwgUHJpc21lQW5ndWxhckNvbmZpZ3VyYXRpb24gfSBmcm9tICcuL3ByaXNtZS1hbmd1bGFyLmNvbmZpZyc7XG5pbXBvcnQgeyBDYWxsYmFja0NvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50L2NhbGxiYWNrL2NhbGxiYWNrLmNvbXBvbmVudCc7XG5cblxuLyoqXG4gKiBDZSBtb2R1bGUgcGVybWV0IGRlIGNoYXJnZXIgbGEgY29uZmlndXJhdGlvbiBkZSBwcmlzbWUuSWwgdmEgZGUgcGFpcmUgYXZlYyBsZSBtb2R1bGVcbiAqIFByaXNtZUFuZ3VsYXJJbml0Q29uZmlndXJhdGlvblxuICpcbiAqIEBleHBvcnRcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0cyA6IFtDb21tb25Nb2R1bGUsXG4gIFJvdXRlck1vZHVsZS5mb3JSb290KFtdLCB7IHJlbGF0aXZlTGlua1Jlc29sdXRpb246ICdsZWdhY3knIH0pXSxcbiAgZGVjbGFyYXRpb25zOiBbQ2FsbGJhY2tDb21wb25lbnRdLFxuICBleHBvcnRzOiBbQ2FsbGJhY2tDb21wb25lbnRdLFxuICBwcm92aWRlcnMgOiBbXG4gIC8vIEwnYXBwbGljYXRpb24gYXBwZWxhbnRlIGRvaXQgZm91cm5pciB1biBwcmlzbWVBbmd1bGFyQ29uZmlndXJhdGlvblxuICB7cHJvdmlkZSA6IFByaXNtZUFuZ3VsYXJDb25maWd1cmF0aW9uLCB1c2VFeGlzdGluZyA6ICdQcmlzbWVBbmd1bGFyQ29uZmlndXJhdGlvbid9LFxuXG4gIC8vIFNpIGwnYXBwbGljYXRpb24gYXBwZWxhbnRlIG5lIHN1cmNoYXJnZSBwYXIgbGUgc3VjY2VzcyBhbmRsZXIsIGFsb3JzIG9uIHV0aWxpc2UgY2VsdWkgcGFyIGTDqWZhdXQuXG4gIHsgcHJvdmlkZTogUFJJU01FX1NVQ0NFU1NfTE9HSU5fSEFORExFUiwgdXNlQ2xhc3M6IERlZmF1bHRTdWNjZXNzTG9naW5IYW5kbGVyfSxcblxuICAvLyBTaSBsJ2FwcGxpY2F0aW9uIGFwcGVsYW50ZSBuZSBzdXJjaGFyZ2UgcGFyIGxlIGZhaWx1cmUgaGFuZGxlciwgYWxvcnMgb24gdXRpbGlzZSBjZWx1aSBwYXIgZMOpZmF1dC5cbiAgeyBwcm92aWRlOiBQUklTTUVfRkFJTFVSRV9MT0dJTl9IQU5ETEVSLCB1c2VDbGFzcyA6IERlZmF1bHRGYWlsdXJlTG9naW5IYW5kbGVyfSxcbl1cbiB9KVxuZXhwb3J0IGNsYXNzIFByaXNtZUFuZ3VsYXJNb2R1bGUge1xuXG59XG4iXX0=