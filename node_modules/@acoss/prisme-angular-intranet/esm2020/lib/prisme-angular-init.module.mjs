import { CommonModule } from '@angular/common';
import { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import { RouterModule } from '@angular/router';
import { StorageServiceModule } from 'ngx-webstorage-service';
import { PrismeBearerInterceptor } from './interceptor/prisme-bearer-interceptor';
import { CLE_STOCKAGE, PrismeAngularInitConfig, UTILISER_LOCAL_STORAGE_TOKEN } from './prisme-angular-init.config';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
/**
 * Function permettant d'initiliser la configuration de prismeAngularInitModule
 *
 * @export
 * @param  cleStockage : clé de stockage utilisé dans le sessionStorage
 * @returns la classe PrismeAngularInitConfig instanciée
 */
/**
 * Module permettant d'initialiser la partie minimale de prisme.
 * Il permet entre d'initialiser les modules nécessaires au bearerInterceptor
 * Il prend en paramètre optionnel la clé de stockage
 * @export
 */
export class PrismeAngularInitModule {
    static forRoot(cleStockage, utiliserLocalStorage) {
        return {
            ngModule: PrismeAngularInitModule,
            providers: [PrismeAngularInitConfig, { provide: CLE_STOCKAGE, useValue: cleStockage },
                { provide: UTILISER_LOCAL_STORAGE_TOKEN, useValue: utiliserLocalStorage }]
        };
    }
}
PrismeAngularInitModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
PrismeAngularInitModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitModule, imports: [CommonModule,
        HttpClientModule,
        StorageServiceModule, i1.RouterModule] });
PrismeAngularInitModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitModule, providers: [
        { provide: HTTP_INTERCEPTORS, useClass: PrismeBearerInterceptor, multi: true },
    ], imports: [CommonModule,
        HttpClientModule,
        StorageServiceModule,
        RouterModule.forRoot([], { relativeLinkResolution: 'legacy' })] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.1.0", ngImport: i0, type: PrismeAngularInitModule, decorators: [{
            type: NgModule,
            args: [{
                    imports: [CommonModule,
                        HttpClientModule,
                        StorageServiceModule,
                        RouterModule.forRoot([], { relativeLinkResolution: 'legacy' })],
                    providers: [
                        { provide: HTTP_INTERCEPTORS, useClass: PrismeBearerInterceptor, multi: true },
                    ]
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJpc21lLWFuZ3VsYXItaW5pdC5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9hY29zcy9wcmlzbWUtYW5ndWxhci1pbnRyYW5ldC9zcmMvbGliL3ByaXNtZS1hbmd1bGFyLWluaXQubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxPQUFPLEVBQXVCLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUM5RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDbEYsT0FBTyxFQUFDLFlBQVksRUFBRSx1QkFBdUIsRUFBRSw0QkFBNEIsRUFBQyxNQUFNLDhCQUE4QixDQUFDOzs7QUFJakg7Ozs7OztHQU1HO0FBRUg7Ozs7O0dBS0c7QUFXSCxNQUFNLE9BQU8sdUJBQXVCO0lBQ2pDLE1BQU0sQ0FBQyxPQUFPLENBQUMsV0FBbUIsRUFBRSxvQkFBNkI7UUFDaEUsT0FBTztZQUNMLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsU0FBUyxFQUFFLENBQUMsdUJBQXVCLEVBQUUsRUFBQyxPQUFPLEVBQUcsWUFBWSxFQUFFLFFBQVEsRUFBRSxXQUFXLEVBQUM7Z0JBQ2xGLEVBQUMsT0FBTyxFQUFHLDRCQUE0QixFQUFFLFFBQVEsRUFBRSxvQkFBb0IsRUFBQyxDQUFDO1NBQzVFLENBQUM7SUFDSixDQUFDOztvSEFQVSx1QkFBdUI7cUhBQXZCLHVCQUF1QixZQVR2QixZQUFZO1FBQ3JCLGdCQUFnQjtRQUNoQixvQkFBb0I7cUhBT1gsdUJBQXVCLGFBSnRCO1FBQ1YsRUFBQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsUUFBUSxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxJQUFJLEVBQUU7S0FDaEYsWUFQWSxZQUFZO1FBQ3JCLGdCQUFnQjtRQUNoQixvQkFBb0I7UUFDcEIsWUFBWSxDQUFDLE9BQU8sQ0FBQyxFQUFFLEVBQUUsRUFBRSxzQkFBc0IsRUFBRSxRQUFRLEVBQUUsQ0FBQzsyRkFNckQsdUJBQXVCO2tCQVZuQyxRQUFRO21CQUFDO29CQUNSLE9BQU8sRUFBRyxDQUFDLFlBQVk7d0JBQ3JCLGdCQUFnQjt3QkFDaEIsb0JBQW9CO3dCQUNwQixZQUFZLENBQUMsT0FBTyxDQUFDLEVBQUUsRUFBRSxFQUFFLHNCQUFzQixFQUFFLFFBQVEsRUFBRSxDQUFDLENBQUM7b0JBRWpFLFNBQVMsRUFBRzt3QkFDVixFQUFDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUUsS0FBSyxFQUFFLElBQUksRUFBRTtxQkFDaEY7aUJBQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSwgSFRUUF9JTlRFUkNFUFRPUlMgfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQgeyBNb2R1bGVXaXRoUHJvdmlkZXJzLCBOZ01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgUm91dGVyTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvcm91dGVyJztcbmltcG9ydCB7IFN0b3JhZ2VTZXJ2aWNlTW9kdWxlIH0gZnJvbSAnbmd4LXdlYnN0b3JhZ2Utc2VydmljZSc7XG5pbXBvcnQgeyBQcmlzbWVCZWFyZXJJbnRlcmNlcHRvciB9IGZyb20gJy4vaW50ZXJjZXB0b3IvcHJpc21lLWJlYXJlci1pbnRlcmNlcHRvcic7XG5pbXBvcnQge0NMRV9TVE9DS0FHRSwgUHJpc21lQW5ndWxhckluaXRDb25maWcsIFVUSUxJU0VSX0xPQ0FMX1NUT1JBR0VfVE9LRU59IGZyb20gJy4vcHJpc21lLWFuZ3VsYXItaW5pdC5jb25maWcnO1xuXG5cblxuLyoqXG4gKiBGdW5jdGlvbiBwZXJtZXR0YW50IGQnaW5pdGlsaXNlciBsYSBjb25maWd1cmF0aW9uIGRlIHByaXNtZUFuZ3VsYXJJbml0TW9kdWxlXG4gKlxuICogQGV4cG9ydFxuICogQHBhcmFtICBjbGVTdG9ja2FnZSA6IGNsw6kgZGUgc3RvY2thZ2UgdXRpbGlzw6kgZGFucyBsZSBzZXNzaW9uU3RvcmFnZVxuICogQHJldHVybnMgbGEgY2xhc3NlIFByaXNtZUFuZ3VsYXJJbml0Q29uZmlnIGluc3RhbmNpw6llXG4gKi9cblxuLyoqXG4gKiBNb2R1bGUgcGVybWV0dGFudCBkJ2luaXRpYWxpc2VyIGxhIHBhcnRpZSBtaW5pbWFsZSBkZSBwcmlzbWUuXG4gKiBJbCBwZXJtZXQgZW50cmUgZCdpbml0aWFsaXNlciBsZXMgbW9kdWxlcyBuw6ljZXNzYWlyZXMgYXUgYmVhcmVySW50ZXJjZXB0b3JcbiAqIElsIHByZW5kIGVuIHBhcmFtw6h0cmUgb3B0aW9ubmVsIGxhIGNsw6kgZGUgc3RvY2thZ2VcbiAqIEBleHBvcnRcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0cyA6IFtDb21tb25Nb2R1bGUsXG4gICAgSHR0cENsaWVudE1vZHVsZSxcbiAgICBTdG9yYWdlU2VydmljZU1vZHVsZSxcbiAgICBSb3V0ZXJNb2R1bGUuZm9yUm9vdChbXSwgeyByZWxhdGl2ZUxpbmtSZXNvbHV0aW9uOiAnbGVnYWN5JyB9KV0sXG5cbiAgcHJvdmlkZXJzIDogW1xuICAgIHtwcm92aWRlOiBIVFRQX0lOVEVSQ0VQVE9SUywgdXNlQ2xhc3M6IFByaXNtZUJlYXJlckludGVyY2VwdG9yLCBtdWx0aTogdHJ1ZSB9LFxuXVxuIH0pXG5leHBvcnQgY2xhc3MgUHJpc21lQW5ndWxhckluaXRNb2R1bGUge1xuICAgc3RhdGljIGZvclJvb3QoY2xlU3RvY2thZ2U6IHN0cmluZywgdXRpbGlzZXJMb2NhbFN0b3JhZ2U6IGJvb2xlYW4pOiBNb2R1bGVXaXRoUHJvdmlkZXJzPFByaXNtZUFuZ3VsYXJJbml0TW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBQcmlzbWVBbmd1bGFySW5pdE1vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1ByaXNtZUFuZ3VsYXJJbml0Q29uZmlnLCB7cHJvdmlkZSA6IENMRV9TVE9DS0FHRSwgdXNlVmFsdWU6IGNsZVN0b2NrYWdlfSxcbiAgICAgICAge3Byb3ZpZGUgOiBVVElMSVNFUl9MT0NBTF9TVE9SQUdFX1RPS0VOLCB1c2VWYWx1ZTogdXRpbGlzZXJMb2NhbFN0b3JhZ2V9XVxuICAgIH07XG4gIH1cbn1cbiJdfQ==