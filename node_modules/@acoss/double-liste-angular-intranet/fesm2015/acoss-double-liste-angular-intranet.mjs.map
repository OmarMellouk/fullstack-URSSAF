{"version":3,"file":"acoss-double-liste-angular-intranet.mjs","sources":["../../../../projects/acoss/double-liste-angular-intranet/src/lib/double-liste.service.ts","../../../../projects/acoss/double-liste-angular-intranet/src/lib/double-liste.component.ts","../../../../projects/acoss/double-liste-angular-intranet/src/lib/double-liste.component.html","../../../../projects/acoss/double-liste-angular-intranet/src/lib/double-liste.module.ts","../../../../projects/acoss/double-liste-angular-intranet/src/public_api.ts","../../../../projects/acoss/double-liste-angular-intranet/src/acoss-double-liste-angular-intranet.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DoubleListeService {\n\n  constructor() { }\n}\n","import { Component, OnInit, Input } from '@angular/core';\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-double-liste',\n  templateUrl: './double-liste.component.html',\n  styleUrls: ['./double-liste.component.scss']\n})\nexport class DoubleListeComponent implements OnInit {\n\n  @Input()\n  height = '100%';\n\n  @Input()\n  width = '100%';\n\n  _listeSource: any[] = [];\n\n  /**\n   * Liste source, tableau de strings ou d'objets\n   * En cas d'objet, définir la clef lockList à true permet d'empêcher un changement de liste\n   */\n  @Input()\n  set listeSource(liste: any[]) {\n    this._listeSource = liste;\n    this.handleSort();\n  }\n\n  get listeSource(): any[] {\n    this.handleSort();\n    return this._listeSource;\n  }\n\n  /**\n   * Liste destination, tableau de strings ou d'objets\n   * En cas d'objet, définir la clef lockList à true permet d'empêcher un changement de liste\n   */\n  @Input()\n  listeDestination: any[] = [];\n\n  @Input()\n  // Permet d'activer ou non le tri de la liste source\n  sortSource = false;\n\n  /**\n   * Dans le cas où listeSource et listeDestination sont des objects\n   * Passe la clef à afficher et sur la quelle trier\n   * \n   * Laisse vide si utilisation d'une liste de strings\n   */\n  @Input() keyToDisplay: string;\n\n  activateMoveToDestionationButton = false;\n  activateMoveToSourceButton = false;\n  activateDestinationButton = false;\n\n  disabledMoveTopButton = false;\n  disabledMoveBottomButton = false;\n\n  doubleListeForm: UntypedFormGroup = this.fb.group({\n    source: [],\n    destination: []\n  });\n\n  constructor(private fb: UntypedFormBuilder) { }\n\n  ngOnInit() {}\n\n  sourceSelect(event) {\n    this.activateMoveToDestionationButton = this.listeSource.length > 0 &&\n      this.doubleListeForm.value.source && this.doubleListeForm.value.source.length > 0;\n    \n    // Disable l'icône dans l'élément doit être verrouillé dans cette liste\n    const index = event.target.index;\n    if (this.listeSource[index]?.lockList) {\n      this.activateMoveToDestionationButton = false;\n    }\n\n    this.activateMoveToSourceButton = false;\n    this.activateDestinationButton = false;\n  }\n\n  destinationSelect(event) {\n    this.activateDestinationButton = this.listeDestination.length > 1 &&\n      this.doubleListeForm.value.destination && this.doubleListeForm.value.destination.length > 0;\n\n    this.activateMoveToSourceButton = this.listeDestination.length > 0 &&\n      this.doubleListeForm.value.destination && this.doubleListeForm.value.destination.length > 0;\n\n    // Disable l'icône dans l'élément doit être verrouillé dans cette liste\n    const index = event.target.index;\n    if (this.listeDestination[index]?.lockList) {\n      this.activateMoveToSourceButton = false;\n    }\n\n    this.activateMoveToDestionationButton = false;\n\n    this.checkDestinationButtons();\n  }\n\n  moveAllToDestination() {\n    const tmpList = [];\n\n    this.listeSource.forEach((elem, index) => {\n      if (!elem.lockList) {\n        // Push les éléments pouvant être déplacés\n        this.listeDestination.push(elem);\n        // Garde en mémoire leur index pour suppression\n        tmpList.push(index);\n      }\n    });\n\n    // Supprime les éléments déplacés\n    for (let i = tmpList.length -1; i >= 0; i--) {\n      this.listeSource.splice(tmpList[i],1);\n    }\n\n    this.activateMoveToDestionationButton = false;\n    this.activateMoveToSourceButton = false;\n  }\n\n  moveAllToSource() {\n    const tmpList = [];\n\n    this.listeDestination.forEach((elem, index) => {\n      if (!elem.lockList) {\n        // Push les éléments pouvant être déplacés\n        this.listeSource.push(elem);\n        // Garde en mémoire leur index pour suppression\n        tmpList.push(index);\n      }\n    });\n\n    // Supprime les éléments déplacés\n    for (let i = tmpList.length -1; i >= 0; i--) {\n      this.listeDestination.splice(tmpList[i],1);\n    }\n\n    this.handleSort();\n    this.activateMoveToDestionationButton = false;\n    this.activateMoveToSourceButton = false;\n  }\n\n  moveToDestionation() {\n    this.move(this.doubleListeForm.value.source, this.listeSource, this.listeDestination);\n    this.activateMoveToDestionationButton = false;\n  }\n\n  moveToSource() {\n    this.move(this.doubleListeForm.value.destination, this.listeDestination, this.listeSource);\n    this.activateMoveToSourceButton = false;\n    this.handleSort();\n  }\n\n  move(formControl: any, source: any[], dest: any[]) {\n    formControl.forEach(value => {\n      // Uniquement dans le cas où l'élément n'est pas verrouillé\n      if (!value.lockList) {\n        const index = source.indexOf(value);\n        if (index >= 0 ) {\n          source.splice(index, 1).forEach(element => dest.push(element));\n        }\n      }\n    });\n    this.doubleListeForm.setValue({\n      source: [],\n      destination: []\n    });\n  }\n\n  // pour vérifier si l'élément passé en paramètre est séléctionné ou pas\n  isSelected(value) {\n    let isSelected = false;\n    if (this.doubleListeForm.value.destination.includes(value)) {\n      isSelected = true;\n    }\n    return isSelected;\n  }\n\n  moveToBottom() {\n    const iterationList = Array.from(this.listeDestination);\n    iterationList.forEach(value => {\n      if (this.isSelected(value)) {\n        const index = this.listeDestination.indexOf(value);\n        if (index >= 0 && index < this.listeDestination.length) {\n          this.listeDestination.splice(index, 1);\n          this.listeDestination.splice(this.listeDestination.length, 0, value);\n        }\n      }\n    });\n\n    this.checkDestinationButtons();\n  }\n\n  moveToTop() {\n    const reversedList = Array.from(this.listeDestination).reverse();\n    reversedList.forEach(value => {\n      if (this.isSelected(value)) {\n        const index = this.listeDestination.indexOf(value);\n        if (index >= 0 && index < this.listeDestination.length) {\n          this.listeDestination.splice(index, 1);\n          this.listeDestination.splice(0, 0, value);\n        }\n      }\n    });\n\n    this.checkDestinationButtons();\n  }\n\n  moveOneStep(list) {\n    list.forEach(value => {\n      const i = list.indexOf(value);\n      if (this.isSelected(value) && !this.isSelected(list[i - 1]) && i > 0 ) {\n        const tmp = list[i - 1];\n        list[i - 1] = list[i];\n        list[i] = tmp;\n      }\n    });\n  }\n\n  moveUp() {\n    this.moveOneStep(this.listeDestination);\n    this.checkDestinationButtons();\n  }\n\n  moveDown() {\n    this.moveOneStep(this.listeDestination.reverse());\n    this.listeDestination.reverse();\n    this.checkDestinationButtons();\n  }\n\n  /**\n   * Effectue un tri de la liste source si le tri est activé\n   */\n  private handleSort() {\n    if (this.sortSource && this._listeSource !== undefined) {\n      this._listeSource.sort((a, b) => {\n        // Dans le cas d'un objet, utilise la clef voulue\n        if (typeof a === 'object') {\n          return a[this.keyToDisplay].localeCompare(b[this.keyToDisplay], 'fr', { ignorePunctuation: true });\n        } else {\n          return a.localeCompare(b, 'fr', { ignorePunctuation: true });\n        }\n      });\n    }\n  }\n\n  /**\n   * Vérifie à chaque mouvement de haut en bas, de bas en haut et à chaque sélection dans la liste de destination\n   * Si les boutons haut/bas doivent être activé ou non\n   */\n  private checkDestinationButtons(): void {\n    const lastSelectedIndex: number = this.doubleListeForm.value.destination?.length - 1;\n    const lastIndex: number = this.listeDestination.length - 1;\n\n    // Vérifie si la première valeur de la sélection correspond à la première valeur de la liste\n    if (this.doubleListeForm.value.destination && this.doubleListeForm.value.destination[0] === this.listeDestination[0]) {\n      this.disabledMoveTopButton = true;\n    } else {\n      this.disabledMoveTopButton = false;\n    }\n\n    // Vérifie si la dernière valeur de la sélection correspond à la dernière valeur de la liste\n    if (this.doubleListeForm.value.destination && this.doubleListeForm.value.destination[lastSelectedIndex] === this.listeDestination[lastIndex]) {\n      this.disabledMoveBottomButton = true;\n    } else {\n      this.disabledMoveBottomButton = false;\n    }\n\n  }\n}\n","<div class=\"d-flex\" [formGroup]=\"doubleListeForm\">\n  <div class=\"select-container\">\n    <select multiple class=\"form-select\" [style.height]=\"height\" [style.width]=\"width\" (click)=\"sourceSelect($event)\" formControlName=\"source\">\n      <option *ngFor=\"let elementSource of listeSource\" [value]=\"elementSource\">{{keyToDisplay ? elementSource[keyToDisplay] : elementSource}} {{elementSource.lockList ? '*' : '' }}</option>\n    </select>\n  </div>\n\n  <div class=\"btn-group-vertical\" role=\"group\">\n    <button class=\"btn\" [disabled]=\"listeDestination.length === 0\" title=\"Tout envoyer à gauche\"\n      (click)=\"moveAllToSource()\">\n      <i class=\"icon-b_fullleft\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"!activateMoveToSourceButton\" title=\"Envoyer sélection à gauche\"\n      (click)=\"moveToSource()\">\n      <i class=\"icon-b_left\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"!activateMoveToDestionationButton\" title=\"Envoyer sélection à droite\"\n      (click)=\"moveToDestionation()\">\n      <i class=\"icon-b_right\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"listeSource.length === 0\" title=\"Tout envoyer à droite\"\n      (click)=\"moveAllToDestination()\">\n      <i class=\"icon-b_fullright\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n\n  <div class=\"select-container\">\n    <select multiple class=\"form-select\" [style.height]=\"height\" [style.width]=\"width\" (click)=\"destinationSelect($event)\" formControlName=\"destination\">\n      <option *ngFor=\"let elementDestination of listeDestination\" [value]=\"elementDestination\">{{keyToDisplay ? elementDestination[keyToDisplay] : elementDestination}} {{elementDestination.lockList ? '*' : '' }}\n      </option>\n    </select>\n  </div>\n  <div class=\"btn-group-vertical\" role=\"group\">\n    <button class=\"btn\" [disabled]=\"!activateDestinationButton || disabledMoveTopButton\" title=\"Envoyer sélection en haut\"\n      (click)=\"moveToTop()\">\n      <i class=\"icon-b_top\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"!activateDestinationButton || disabledMoveTopButton\" (click)=\"moveUp()\" title=\"Monter sélection\">\n      <i class=\"icon-b_up\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"!activateDestinationButton || disabledMoveBottomButton\" (click)=\"moveDown()\" title=\"Descendre sélection\">\n      <i class=\"icon-b_down\" aria-hidden=\"true\"></i>\n    </button>\n    <button class=\"btn\" [disabled]=\"!activateDestinationButton || disabledMoveBottomButton\" (click)=\"moveToBottom()\" title=\"Envoyer sélection en bas\">\n      <i class=\"icon-b_bottom\" aria-hidden=\"true\"></i>\n    </button>\n  </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DoubleListeComponent } from './double-liste.component';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule\n  ],\n  declarations: [DoubleListeComponent],\n  exports: [DoubleListeComponent]\n})\nexport class DoubleListeModule { }\n","/*\n * Public API Surface of double-liste\n */\n\nexport * from './lib/double-liste.service';\nexport * from './lib/double-liste.component';\nexport * from './lib/double-liste.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}