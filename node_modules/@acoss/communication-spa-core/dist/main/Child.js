"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Child = void 0;
const uuid_1 = require("./uuid");
/**
 * Classe interne permettant de suivre les composants de communication enfants
 */
class Child {
    constructor(window, timeoutDelaiMS, timeoutCallback) {
        this.childParentVisionUUID = (0, uuid_1.uuidv4)(); // UUID vision Parent du composant de communication distant
        this.window = window;
        // Ajout d'une promise de Handshake permettant de temporiser les messages d'init
        this.handshakeFinishedPromise = new Promise((resolve) => {
            // rien à faire, la promise sera résolue à reception du match par le handler
            this.handshakeFinishedResolver = () => {
                resolve();
            };
        });
        // Levée d'un message d'alerte après un délai fixe si le handshake n'a pas été finalisé
        (new Promise(resolve => setTimeout(resolve, timeoutDelaiMS))).then(() => {
            if (!this.childUUID) {
                timeoutCallback();
            }
        });
    }
}
exports.Child = Child;
