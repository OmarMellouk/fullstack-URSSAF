"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MessageDTO = exports.MessageScope = void 0;
const uuid_1 = require("./uuid");
/**
 * MessageScope enum qui défini le scope du message.
 *
 * Un message BROADCAST sera transmis à tous les composants IHM enregistrés dans la com inter SPA via le mecanisme suivant :
 *  - Si le composant n'est pas racine : Le message remonte au noeud parent
 *  - Si le composant est racine (noeud central) : Le message est retransmis sous forme de message CHILDS à tous les noeuds enfant
 *
 * Un message CHILDS est retransmis à tous les enfants du composant éméteur (et aux enfants des enfants de manière récursive)
 *
 * Un message DIRECT sera uniquement transmis à la cible
 */
var MessageScope;
(function (MessageScope) {
    MessageScope[MessageScope["BROADCAST"] = 0] = "BROADCAST";
    MessageScope[MessageScope["DIRECT"] = 1] = "DIRECT";
    MessageScope[MessageScope["CHILDS"] = 2] = "CHILDS";
})(MessageScope = exports.MessageScope || (exports.MessageScope = {}));
/**
 * Data Transfer Object message
 *
 * Objet portant les données techniques du transfer et les données fonctionnelles (portées par attribut value au format JSON).
 *
 * L'objet données (attribut value) est sérialisé en JSON pour des raison de sécurité afin d'éviter
 * l'envoi d'objets riches Jvascript qui pouraient contenir des fonctions
 */
class MessageDTO {
    constructor(namespace, topic, appName, replyToUUID, destinationUUID, senderUUID, scope, layerVersion, valueObject) {
        this.namespace = namespace;
        this.topic = topic;
        this.appName = appName;
        this.uuid = (0, uuid_1.uuidv4)();
        this.replyToUUID = replyToUUID;
        this.destinationUUID = destinationUUID;
        this.senderUUID = senderUUID;
        this.childComponentUUID = undefined;
        this.createdTimestamp = new Date().getTime();
        this.scope = scope;
        this.layerVersion = layerVersion;
        this.value = JSON.stringify(valueObject);
    }
}
exports.MessageDTO = MessageDTO;
