import { BehaviorSubject, Observable, Subject } from 'rxjs';
import { LangChangeEvent } from '@ngx-translate/core';
import * as i0 from "@angular/core";
export declare class TranslateServiceMock {
    onLangChangeSubject: Subject<LangChangeEvent>;
    onTranslationChangeSubject: Subject<string>;
    onDefaultLangChangeSubject: Subject<string>;
    isLoadedSubject: BehaviorSubject<boolean>;
    onLangChange: Observable<LangChangeEvent>;
    onTranslationChange: Observable<string>;
    onDefaultLangChange: Observable<string>;
    isLoaded: Observable<boolean>;
    currentLang: string;
    languages: string[];
    get(content: string): Observable<string>;
    use(lang: string): void;
    addLangs(langs: string[]): void;
    getBrowserLang(): string;
    getLangs(): string[];
    getTranslation(): Observable<any>;
    instant(key: string | string[], interpolateParams?: object): string;
    setDefaultLang(lang: string): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<TranslateServiceMock, never>;
    static ɵprov: i0.ɵɵInjectableDeclaration<TranslateServiceMock>;
}
